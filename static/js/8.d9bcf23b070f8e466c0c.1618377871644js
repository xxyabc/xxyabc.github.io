webpackJsonp([8],{

/***/ "cxP0":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ./node_modules/babel-runtime/core-js/object/assign.js
var object_assign = __webpack_require__("woOf");
var assign_default = /*#__PURE__*/__webpack_require__.n(object_assign);

// EXTERNAL MODULE: ./node_modules/os-browserify/browser.js
var browser = __webpack_require__("gAs1");
var browser_default = /*#__PURE__*/__webpack_require__.n(browser);

// EXTERNAL MODULE: ./src/lib/utils.js
var utils = __webpack_require__("n95b");

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/systemManagement/equipment.vue

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var equipment = ({
  name: "equipment",
  data: function data() {
    return {
      role: "", //权限设置
      level: "",
      loading: true, //表格加载动画
      loadingEq: true, //树形加载动画
      tableData: [], //表格数据
      //表单信息
      data2: [], //设备组数据
      haveData: "暂无数据", //无数据时显示的文字
      defaultProps: {
        label: "name"
      }, //设备组数据定制
      groupDisable: false, //分配设备组是否可以选择
      defaultId: "", //页面初始时默认选中设备组的id
      activeId: -2, //选中的设备组ID
      activeName: "", //选中的设备组ID
      dialogVisible: false, //打开对应增加表单的弹窗
      dialogFormVisible: false, //修改用户信息
      cutImgType: "", //新建的剪裁图片或者编辑的剪裁图片
      multipleSelection: [], //表格中被批量选中的行的信息存放
      activeRow: {
        name: "",
        groupId: "",
        icNumber: "",
        phoneNumber: "",
        cardNumber: "",
        gender: "",
        status: "",
        orgName: "",
        remark: "",
        imageUrl: ""
      }, //表格中被单独选中的行的信息存放
      activeRowFrom: {
        name: [{ required: true, message: "请输入设备名称", trigger: "blur" }],
        code: [{ required: true, message: "请输入设备编码", trigger: "blur" }],
        groupId: [{
          required: true,
          message: "请选择案场",
          trigger: "change",
          type: "array"
        }]
      }, //验证编辑提交的验证
      batchDele: false, //是否选中批量删除
      imageUrl: "", //上传图片路径
      serch: "", //人员搜索
      ruleForm: {
        name: "", //设备名
        groupId: [], //组ID
        code: "" //设备编码
      }, //新增人员表单
      param: {}, //表单要提交的参数
      updateParam: "", //更新表单提交
      groupId: [],
      rules: {
        name: [{ required: true, message: "请输入设备名称", trigger: "blur" }],
        code: [{ required: true, message: "请输入设备编码", trigger: "blur" }],
        groupId: [{
          required: true,
          message: "设备组不能位空",
          trigger: "change",
          type: "array"
          // { min: 1, max: 50, message: "组织名称不能为空", trigger: "blur" }
        }]
      }, //表单验证规则
      currentPage: 1, //分页组件
      total: 0, //总条数
      pageTotal: 5, //每页几条
      pageType: "tableList", //分页状态默认为表格
      Updataform: {
        name: "", //设备名
        groupId: [], //组ID
        code: "" //设备编码
      },
      anchangId: "" //保存点击的anchangId
    };
  },

  methods: {
    /*****************  树节点点击    ************************ */
    clickNode: function clickNode(a, b, c) {
      this.pageType = "tableList";
      this.serch = "";
      this.currentPage = 1;
      this.activeId = a.id;
      if (!a.children && a.id != -1 && a.fid.indexOf("d") >= 0) {
        this.haveData = "暂无数据";
        this.groupId = [];
        this.groupId.push(b.parent.parent.parent.data.id);
        this.groupId.push(b.parent.data.name);
        this.groupId.push(a.id);
        this.anchangId = a.id;
        this.ruleForm.groupId = this.groupId;
        this.groupDisable = true;
      } else if (a.children) {
        this.haveData = "请选择案场查看设备列表";
        this.tableData = [];
        return;
      } else {
        this.groupDisable = false;
        this.groupId = [0, 0, -1];
        this.haveData = "暂无数据";
      }

      this.loading = true;
      this.getPeopleList();
    },

    /********************** 表格操作 *************************/
    // 编辑
    handleEdit: function handleEdit(index, row) {
      this.activeRow = assign_default()(this.activeRow, row);
      console.log("activeRow=", this.activeRow);
      this.Updataform.groupId = this.groupId;
      this.Updataform.name = this.activeRow.name;
      this.Updataform.code = this.activeRow.code;

      this.updateParam = new FormData();
      this.dialogFormVisible = !this.dialogFormVisible;
    },


    // 提交编辑
    updataFromRequire: function updataFromRequire(activeRow) {
      var _this2 = this;

      this.$refs[activeRow].validate(function (valid) {
        if (valid) {
          var _groupName = function _groupName(arr, id) {
            //通过ID获取groupName
            arr.forEach(function (item, index) {
              if (item.id == id) {
                name = item.name;
              } else if (item.children) {
                _groupName(item.children, id);
              }
            });
          };

          _this2.updateParam.append("id", _this2.activeRow.id);
          _this2.updateParam.append("name", _this2.Updataform.name);
          _this2.updateParam.append("anchangId", _this2.Updataform.groupId[2]);
          _this2.updateParam.append("code", _this2.Updataform.code);
          _this2.updateParam.append("corId", _this2.Updataform.groupId[0]);

          _this2.$request.updateEquipment(_this2.updateParam).then(function (res) {
            if (res.status == 200 && res.data.code == "1000") {
              _this2.dialogFormVisible = !_this2.dialogFormVisible;
              //操作成功
              _this2.$message({
                //弹窗
                type: "success",
                message: "更新成功!",
                duration: 1000
              });
              _this2.closeUpdataFromRequire();
              _this2.dialogVisible = false;
              _this2.currentPage = 1;
              _this2.getPeopleList(); //刷新人员列表
            } else {
              _this2.$message({
                type: "error",
                message: res.data.msg,
                duration: 1000
              });
            }
          }).catch(function () {
            _this2.$message({
              type: "error",
              message: "请求超时，请稍后重试!"
            });
            _this2.dialogVisible = false;
            _this2.dialogFormVisible = !_this2.dialogFormVisible;
            _this2.closeUpdataFromRequire();
          });
        } else {
          _this2.$message.error("请检查信息是否填写完毕");
          return false;
        }
      });
    },

    //取消修改用户信息
    closeUpdataFromRequire: function closeUpdataFromRequire() {
      this.$refs["activeRow"].resetFields();
      this.dialogFormVisible = false;
    },


    // 删除
    handleDelete: function handleDelete(index, row) {
      var _this3 = this;

      //判断是否为批量删除
      if (index == -1) {
        //批量删除
        if (this.multipleSelection.length == 0) {
          //未选中设备时提示
          this.$message({
            message: "请选需要删除的设备",
            type: "warning",
            duration: 1000
          });
          return;
        } else {
          this.batchDele = true; //批量删除为true
        }
      } else {
        //单个删除
        this.batchDele = false; //批量删除为false
        this.activeRow = row; //获得选中行信息
      }
      this.$confirm("确认删除该设备及绑定在该设备下的摄像头?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(function () {
        //点击确定执行删除方法
        _this3.currentPage = 1;
        if (!_this3.batchDele) {
          _this3.$request.delEquipment({
            id: _this3.activeRow.id
          }).then(function (res) {
            //单独删除方法
            if (res.data.code == 1000) {
              //删除成功
              _this3.$message({
                type: "success",
                message: "删除成功!",
                duration: 1000
              }); //弹窗
              _this3.getPeopleList();
            } else {
              _this3.$message({
                type: "error",
                message: "删除失败，请稍后重试!",
                duration: 1000
              });
            }
          }).catch(function () {
            _this3.$message({
              type: "error",
              message: "请求超时，请稍后重试!",
              duration: 1000
            });
          });
        } else {
          //批量删除
          var list = [];
          _this3.multipleSelection.forEach(function (item) {
            list.push(item.id);
          });
          _this3.$request.delEquipments({
            ids: list
          }).then(function (res) {
            if (res.status == 200 & res.data.code == 1000) {
              //删除成功
              _this3.$message({
                //弹窗
                type: "success",
                message: "批量删除成功!",
                duration: 1000
              });
              _this3.getPeopleList(); //刷新人员列表
            } else {
              _this3.$message({
                type: "error",
                message: "删除失败，请稍后重试!",
                duration: 1000
              });
            }
          }).catch(function (err) {
            _this3.$message({
              type: "error",
              message: "请求超时，请稍后重试!",
              duration: 1000
            });
          });
        }
      }).catch(function (err) {
        console.log("err=", err);
      });
    },

    //跳转查看摄像头
    cameraView: function cameraView(index, row) {
      var id = row.id;
      window.sessionStorage.setItem('equipId', id);
      this.$router.push({
        name: "camera",
        params: { id: id, anchangId: this.anchangId, fid: 'd' + this.anchangId }
      });
    },

    //跳转查看人证设备
    comparisonView: function comparisonView(index, row, kd) {
      var id = row.id;
      window.sessionStorage.setItem('equipId', id);
      this.$router.push({
        name: "comparisonEq",
        params: { id: id, type: kd, anchangId: this.anchangId, fid: 'd' + this.anchangId }
      });
    },


    //搜索
    serchVal: function serchVal() {
      var _this4 = this;

      this.haveData = "暂无数据";
      this.currentPage = 1;
      if (this.serch == "") {
        this.pageType = "tableList";
        this.getPeopleList(); //刷新人员列表
      } else {
        this.pageType = "serchList";
        personSerch({
          currentPage: 1,
          pageSize: this.pageTotal,
          likeVal: this.serch,
          groupId: this.activeId
        }).then(function (res) {
          if (res.status == 200 && res.data.code == 1000) {
            var list = res.data.data.list;
            list.forEach(function (item) {
              if (item.gender) {
                item.gender = item.gender == 0 ? "男" : "女";
              }
              item.updateTime = item.updateTime ? _this4.common.getTime(item.updateTime) : "";
              item.createTime = item.createTime ? _this4.common.getTime(item.createTime) : "";
              item.recConTime = item.recConTime ? _this4.common.getTime(item.recConTime) : "";
            });
            _this4.tableData = list;
            _this4.total = res.data.data.total;
            _this4.currentPage = 1;
          } else {
            _this4.tableData = [];
            _this4.total = 0;
            _this4.currentPage = 1;
          }
        });
      }
    },


    //隐藏弹出框
    handleDiag: function handleDiag() {
      if (!this.groupDisable) {
        this.groupId = [];
      }
      this.$refs["ruleForm"].resetFields();
      this.dialogVisible = false;
      this.imageUrl = "";
    },


    /*********************  新增人员   **********************************/

    addForm: function addForm() {
      this.dialogVisible = true;
      this.cutImgType = "add";
      this.param = new FormData();
    },

    // 弹窗组件 新增表单
    handleClose: function handleClose(ruleForm) {
      var _this5 = this;

      this.ruleForm.groupId = this.groupId;

      this.$refs[ruleForm].validate(function (valid) {
        if (valid) {
          _this5.param.append("name", _this5.ruleForm.name);
          _this5.param.append("code", _this5.ruleForm.code);
          _this5.param.append("anchangId", _this5.ruleForm.groupId[2]);
          _this5.param.append("corId", _this5.ruleForm.groupId[0]);
          _this5.$request.addEquipment(_this5.param).then(function (res) {
            if (res.status == 200 && res.data.code == "1000") {
              //操作成功
              _this5.$message({
                //弹窗
                type: "success",
                message: "添加成功!",
                duration: 1000
              });
              _this5.imageUrl = "";
              _this5.dialogVisible = false;
              _this5.currentPage = 1;
              _this5.$refs[ruleForm].resetFields();
              _this5.getPeopleList(); //刷新人员列表
              _this5.imageUrl = "";
            } else if (res.data.code == "1101" || res.data.code == "0000") {
              _this5.$message({
                type: "error",
                message: res.data.msg,
                duration: 1000
              });
              _this5.param = new FormData();
              _this5.imageUrl = "";
              _this5.$refs[ruleForm].resetFields();
            } else {
              _this5.$message({
                type: "error",
                message: "请求超时，请稍后重试!",
                duration: 1000
              });
              _this5.param = new FormData();
              _this5.imageUrl = "";
              _this5.$refs[ruleForm].resetFields();
            }
          }).catch(function () {
            _this5.$message({
              type: "error",
              message: "请求超时，请稍后重试!",
              duration: 1000
            });
            _this5.param = new FormData();
            _this5.imageUrl = "";
            _this5.$refs[ruleForm].resetFields();
          });
        } else {
          return false;
        }
      });
    },


    //表格多选
    handleSelectionChange: function handleSelectionChange(val) {
      this.multipleSelection = val;
    },
    handleChange: function handleChange(value) {
      this.ruleForm.groupId = this.groupId;
    },


    /****************************  分页  **************************** */

    handleSizeChange: function handleSizeChange(val) {
      var _this6 = this;

      this.pageTotal = val;
      this.currentPage = 1;
      if (this.pageType == "tableList") {
        //刷新人员列表
        this.getPeopleList();
      } else if (this.pageType == "serchList") {
        personSerch({
          currentPage: 1,
          pageSize: this.pageTotal,
          likeVal: this.serch,
          groupId: this.activeId
        }).then(function (res) {
          if (res.status == 200 && res.data.code == 1000) {
            var list = res.data.data.list;
            list.forEach(function (item) {
              if (item.gender) {
                item.gender = item.gender == 0 ? "男" : "女";
              }
              item.updateTime = item.updateTime ? _this6.common.getTime(item.updateTime) : "";
              item.createTime = item.createTime ? _this6.common.getTime(item.createTime) : "";
              item.recConTime = item.recConTime ? _this6.common.getTime(item.recConTime) : "";
            });
            _this6.tableData = list;
            _this6.total = res.data.data.total;
          }
        });
      }
    },

    //调转的每页查询
    directHandleCurrentChange: function directHandleCurrentChange(val) {
      var _this7 = this;

      this.currentPage = val;
      if (this.pageType == "tableList") {
        //刷新人员列表
        this.getPeopleList();
      } else if (this.pageType == "serchList") {
        personSerch({
          currentPage: this.currentPage,
          pageSize: this.pageTotal,
          likeVal: this.serch,
          groupId: this.activeId
        }).then(function (res) {
          if (res.status == 200 && res.data.code == 1000) {
            var list = res.data.data.list;
            list.forEach(function (item) {
              if (item.gender) {
                item.gender = item.gender == 0 ? "男" : "女";
              }
              item.updateTime = item.updateTime ? _this7.common.getTime(item.updateTime) : "";
              item.createTime = item.createTime ? _this7.common.getTime(item.createTime) : "";
              item.recConTime = item.recConTime ? _this7.common.getTime(item.recConTime) : "";
            });
            _this7.tableData = list;
            _this7.total = res.data.data.total;
          }
        });
      }
    },


    // ***************  重置条件查询*********************/
    resrtConditionVal: function resrtConditionVal() {
      this.pageType = "tableList";
      this.serch = "";
      this.currentPage = 1;
      //请求人员列表数据
      this.getPeopleList();
    },


    /*************  请求人员列表   ******************/
    getPeopleList: function getPeopleList() {
      var _this8 = this;

      this.loading = true;
      this.$request.getEquipmentList({
        currentPage: 1,
        pageSize: 5,
        anchangId: this.groupId[2]
      }).then(function (res) {
        if (res.status == 200 && res.data.code == 1000) {
          var list = res.data.data.list;
          list.forEach(function (item) {
            if (item.createTime) {
              item.createTime = _this8.common.getTime(item.createTime);
            }
            if (item.activeTime) {
              item.activeTime = _this8.common.getTime(item.activeTime);
            }
            if (item.recConTime) {
              item.recConTime = _this8.common.getTime(item.recConTime);
            }
          });
          _this8.tableData = list;
          _this8.total = res.data.data.total;
          _this8.currentPage = res.data.data.pageNum;
          _this8.loading = false;
        } else {
          _this8.tableData = [];
          _this8.total = 0;
          _this8.loading = false;
        }
      }).catch(function (error) {
        _this8.$message({
          type: "error",
          message: "请求超时,请稍后重试",
          duration: 1000
        });
      });
    }
  },
  created: function created() {
    var _this9 = this;

    var rootAdminInfo = JSON.parse(Object(utils["a" /* Decrypt */])(window.sessionStorage.getItem("rootAdminInfo")));

    var id = rootAdminInfo.id;
    var pid = rootAdminInfo.corId;
    this.role = rootAdminInfo.role;
    this.level = rootAdminInfo.level;
    var role = rootAdminInfo.role;
    var level = rootAdminInfo.level;
    var anchangIds = rootAdminInfo.anchangId;
    var cityName = rootAdminInfo.cityName;
    var params = {};
    if (this.level == 0 || this.level == -1) {
      params = { anchangIds: anchangIds, cityName: cityName, level: level };
    } else {
      params = {
        corId: pid,
        cityName: cityName,
        anchangIds: anchangIds,
        level: level
      };
    }

    var key = void 0;
    var num = 0;
    //请求案场数据
    this.$request.searchAnchang({ admin: rootAdminInfo, allowEmptyChild: false }).then(function (res) {
      if (res.status == 200) {
        _this9.loadingEq = false;
      }
      var data = res.data.data.treeNodes;
      if (data.length == 0) {
        _this9.$message({
          type: "warning",
          message: "当前账号没有可管理案场！",
          duration: 1000
        });
        return;
      }
      //增加fid
      data.forEach(function (cor) {
        cor.fid = "a" + cor.id;
        if (cor.children) {
          cor.children.forEach(function (area) {
            area.fid = "b" + area.id;
            if (area.children) {
              area.children.forEach(function (city) {
                city.fid = "c" + city.id;
                if (city.children) {
                  city.children.forEach(function (anchang) {
                    anchang.fid = 'd' + anchang.id;
                  });
                }
              });
            }
          });
        }
      });
      val(data);
      //给每条数据添加value属性
      function val(arr) {
        arr.forEach(function (item, index) {
          item.value = item.id;
          if (item.children) {
            if (item.children.length != 0) {
              val(item.children);
            } else {
              delete item.children;
            }
          }
        });
      }
      _this9.data2 = data;
      console.log(data);

      var fid = void 0;
      _this9.activeId = data[0].children[0].children[0].children[0].id;
      id = data[0].children[0].children[0].children[0].id;
      fid = data[0].children[0].children[0].children[0].fid;
      _this9.anchangId = _this9.$route.params.anchangId ? _this9.$route.params.anchangId : id;
      pid = data[0].id;
      var cityName = data[0].children[0].name;
      var _this = _this9;
      console.log(_this9.$route.params.anchangId);
      _this.$nextTick(function () {
        _this.$refs.tree2.setCurrentKey(this.$route.params.fid ? this.$route.params.fid : fid);
      });
      _this9.groupId.push(pid);
      _this9.groupId.push(cityName);
      _this9.groupId.push(id);
      _this9.groupDisable = true;

      //请求设备列表数据
      _this9.$request.getEquipmentList({
        currentPage: 1,
        pageSize: 5,
        anchangId: _this9.$route.params.anchangId ? _this9.$route.params.anchangId : id
      }).then(function (res) {
        if (res.status == 200 && res.data.code == 1000) {
          _this9.loading = false;
          var list = res.data.data.list;
          list.forEach(function (item) {
            if (item.createTime) {
              item.createTime = _this9.common.getTime(item.createTime);
            }
            if (item.activeTime) {
              item.activeTime = _this9.common.getTime(item.activeTime);
            }
            if (item.recConTime) {
              item.recConTime = _this9.common.getTime(item.recConTime);
            }
          });
          _this9.tableData = list;
          _this9.total = res.data.data.total;
        }
      }).catch(function (err) {
        _this9.$message({
          type: "error",
          message: "请求超时,请稍后重试",
          duration: 1000
        });
      });
    }).catch(function (err) {
      _this9.$message({
        type: "error",
        message: "请求超时,请稍后重试",
        duration: 1000
      });
    });
  },
  mounted: function mounted() {}
});
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-44411014","hasScoped":true,"transformToRequire":{"video":["src","poster"],"source":"src","img":"src","image":"xlink:href"},"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/systemManagement/equipment.vue
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"peopleList"},[_c('div',{staticClass:"tree-list"},[_c('p',[_vm._v("案场列表：")]),_vm._v(" "),_c('el-tree',{ref:"tree2",staticClass:"filter-tree",attrs:{"empty-text":"暂无数据","data":_vm.data2,"props":_vm.defaultProps,"expand-on-click-node":false,"default-expand-all":"","highlight-current":"","node-key":"fid"},on:{"node-click":_vm.clickNode}})],1),_vm._v(" "),_c('div',{staticClass:"peopleListForm"},[_c('div',{staticClass:"peopleList-title el-row"},[_c('span',{staticClass:"peopleList-title_liner"}),_vm._v(" "),_c('span',{staticClass:"peopleList-title_text"},[_vm._v("系统管理")]),_vm._v(" "),_c('span',{staticClass:"peopleList-direction"},[_vm._v(">")]),_vm._v(" "),_c('span',{staticClass:"peopleList-title_text"},[_vm._v("设备管理")]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.role!=0),expression:"role!=0"}],staticClass:"peopleList-Add"},[_c('button',{staticClass:"el-button el-button--success el-button--small",attrs:{"type":"button"},on:{"click":_vm.addForm}},[_c('i',{staticClass:"el-icon-plus"}),_vm._v(" "),_c('span',[_vm._v("新增")])]),_vm._v(" "),_c('el-button',{attrs:{"type":"danger","size":"small","icon":"el-icon-delete","title":"批量删除"},on:{"click":function($event){return _vm.handleDelete(-1)}}},[_vm._v("批量删除")])],1)]),_vm._v(" "),_c('el-table',{directives:[{name:"loading",rawName:"v-loading",value:(_vm.loading),expression:"loading"}],staticStyle:{"width":"100%","margin-top":"20px"},attrs:{"data":_vm.tableData,"border":"","empty-text":_vm.haveData,"element-loading-text":"正在搜索设备","element-loading-spinner":"el-icon-loading","element-loading-background":"rgba(0, 0, 0, 0.8)"},on:{"selection-change":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{"type":"selection","width":"55"}}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"code","label":"设备编号","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.code || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"name","label":"设备名称","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.name || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"status","width":"100","label":"状态","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.status==1?"激活":"未激活"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"hasSycro","label":"同步状态","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.hasSycro==1?"已同步":"未同步"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"createTime","label":"创建时间","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.createTime || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"recConTime","label":"最近连接时间","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.recConTime || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"operation","label":"操作","width":"420"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('el-button',{attrs:{"size":"mini","type":"primary"},on:{"click":function($event){return _vm.cameraView(scope.$index, scope.row)}}},[_vm._v("摄像头")]),_vm._v(" "),_c('el-button',{attrs:{"size":"mini","type":"primary"},on:{"click":function($event){return _vm.comparisonView(scope.$index, scope.row,0)}}},[_vm._v("人证设备")]),_vm._v(" "),_c('el-button',{attrs:{"size":"mini","type":"primary"},on:{"click":function($event){return _vm.comparisonView(scope.$index, scope.row,1)}}},[_vm._v("客登设备")]),_vm._v(" "),_c('el-button',{attrs:{"size":"mini","disabled":_vm.role==0},on:{"click":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v("编辑")]),_vm._v(" "),_c('el-button',{attrs:{"size":"mini","disabled":_vm.role==0,"type":"danger"},on:{"click":function($event){return _vm.handleDelete(scope.$index, scope.row)}}},[_vm._v("删除")])]}}])})],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.total!=0),expression:"total!=0"}],staticClass:"peopleList-page"},[_c('el-pagination',{attrs:{"current-page":_vm.currentPage,"page-sizes":[5, 10, 15, 20],"page-size":5,"layout":"total, sizes, prev, pager, next, jumper","total":_vm.total},on:{"size-change":_vm.handleSizeChange,"current-change":_vm.directHandleCurrentChange}})],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"新增设备","visible":_vm.dialogVisible,"width":"40%","before-close":_vm.handleDiag,"top":"5vh","close-on-click-modal":false},on:{"update:visible":function($event){_vm.dialogVisible=$event}}},[_c('div',{staticClass:"addFormInfo"},[_c('el-form',{ref:"ruleForm",staticClass:"demo-ruleForm",attrs:{"model":_vm.ruleForm,"rules":_vm.rules,"label-width":"100px"}},[_c('el-form-item',{attrs:{"label":"设备名称","prop":"name"}},[_c('el-input',{model:{value:(_vm.ruleForm.name),callback:function ($$v) {_vm.$set(_vm.ruleForm, "name", $$v)},expression:"ruleForm.name"}})],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"设备编码","prop":"name"}},[_c('el-input',{model:{value:(_vm.ruleForm.code),callback:function ($$v) {_vm.$set(_vm.ruleForm, "code", $$v)},expression:"ruleForm.code"}})],1)],1)],1),_vm._v(" "),_c('span',{staticClass:"dialog-footer",attrs:{"slot":"footer"},slot:"footer"},[_c('el-button',{on:{"click":_vm.handleDiag}},[_vm._v("取 消")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.handleClose('ruleForm')}}},[_vm._v("确 定")])],1)]),_vm._v(" "),_c('el-dialog',{attrs:{"title":"修改设备信息","before-close":_vm.closeUpdataFromRequire,"visible":_vm.dialogFormVisible,"width":"40%","top":"5vh","close-on-click-modal":false},on:{"update:visible":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{ref:"activeRow",staticClass:"demo-ruleForm",attrs:{"model":_vm.Updataform,"rules":_vm.activeRowFrom,"label-width":"100px"}},[_c('el-form-item',{attrs:{"label":"设备名","prop":"name"}},[_c('el-input',{model:{value:(_vm.Updataform.name),callback:function ($$v) {_vm.$set(_vm.Updataform, "name", $$v)},expression:"Updataform.name"}})],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"设备编码","prop":"code"}},[_c('el-input',{model:{value:(_vm.Updataform.code),callback:function ($$v) {_vm.$set(_vm.Updataform, "code", $$v)},expression:"Updataform.code"}})],1)],1),_vm._v(" "),_c('div',{staticClass:"dialog-footer",attrs:{"slot":"footer"},slot:"footer"},[_c('el-button',{on:{"click":_vm.closeUpdataFromRequire}},[_vm._v("取 消")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.updataFromRequire('activeRow')}}},[_vm._v("确 定")])],1)],1)],1)])}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ var systemManagement_equipment = (esExports);
// CONCATENATED MODULE: ./src/components/systemManagement/equipment.vue
function injectStyle (ssrContext) {
  __webpack_require__("hENz")
}
var normalizeComponent = __webpack_require__("VU/8")
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-44411014"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  equipment,
  systemManagement_equipment,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ var components_systemManagement_equipment = __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ "gAs1":
/***/ (function(module, exports) {

exports.endianness = function () { return 'LE' };

exports.hostname = function () {
    if (typeof location !== 'undefined') {
        return location.hostname
    }
    else return '';
};

exports.loadavg = function () { return [] };

exports.uptime = function () { return 0 };

exports.freemem = function () {
    return Number.MAX_VALUE;
};

exports.totalmem = function () {
    return Number.MAX_VALUE;
};

exports.cpus = function () { return [] };

exports.type = function () { return 'Browser' };

exports.release = function () {
    if (typeof navigator !== 'undefined') {
        return navigator.appVersion;
    }
    return '';
};

exports.networkInterfaces
= exports.getNetworkInterfaces
= function () { return {} };

exports.arch = function () { return 'javascript' };

exports.platform = function () { return 'browser' };

exports.tmpdir = exports.tmpDir = function () {
    return '/tmp';
};

exports.EOL = '\n';

exports.homedir = function () {
	return '/'
};


/***/ }),

/***/ "hENz":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })

});