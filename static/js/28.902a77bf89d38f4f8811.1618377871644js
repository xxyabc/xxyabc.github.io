webpackJsonp([28],{

/***/ "QHQW":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ./src/lib/utils.js
var utils = __webpack_require__("n95b");

// EXTERNAL MODULE: ./src/component/fengkong/compareImage.vue + 2 modules
var compareImage = __webpack_require__("TQNy");

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/photoCheck.vue
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var photoCheck = ({
  name: "photoCheck",
  components: { compareImage: compareImage["a" /* default */] },
  data: function data() {
    return {
      role: "", //权限设置
      level: "",
      loading: true, //表格加载动画
      tableData: [], //表格数据
      data2: [], //树形数据
      defaultProps: {
        label: "name"
      },
      activeId: "",
      haveData: "",
      groupId: [],
      anchangId: "", //保存点击的anchangId
      anchangName: "",
      riskPath: "",

      showResult: false, //检索结果弹窗
      resultData: [], //检索结果
      activeRow: {},
      haveData1: "暂无数据",
      loading1: "",
      searchCurrentPage: 1,
      searchPageSize: 10,
      searchTotal: 0,

      flvPlayer: null,
      dialogVideo: false, //录像弹窗
      PvideoLoading: false, //录像loading
      videoSrc: "", //录像地址
      cmdId: "", //录像的命令id
      videoImageName: "", //查看录像的图片名
      viedoACid: "", //录像的案场id
      viedoCreateTime: "",
      beforeSeconds: 10,
      afterSeconds: 10,
      environment: 1, //当前内外网环境，默认外网
      countSend: 0 //控制每个案场只发送一次网络状态
    };
  },

  methods: {
    /*****************  树节点点击    ************************ */
    clickNode: function clickNode(a, b, c) {
      this.activeId = a.id;
      if (!a.children && a.id != -1 && a.fid.indexOf("d") >= 0) {
        this.haveData = "暂无数据";
        this.groupId = [];
        this.groupId.push(b.parent.parent.parent.data.id);
        this.groupId.push(b.parent.data.name);
        this.groupId.push(a.id);
        this.anchangId = a.id;
        this.anchangName = a.name;
        this.checkNetwork();
      } else if (a.children) {
        this.haveData = "请选择案场查看结果列表";
        this.tableData = [];
        return;
      } else {
        this.groupId = [0, 0, -1];
        this.haveData = "暂无数据";
      }

      this.loading = true;
      this.getList();
    },

    /*************  请求列表   ******************/
    getList: function getList() {
      var _this2 = this;

      this.loading = true;
      this.$request.getPzhyRecords({
        anchangId: this.anchangId
      }).then(function (res) {
        console.log(res);
        if (res.status == 200 && res.data.code == 1000) {
          var list = res.data.data;
          list.forEach(function (item) {
            switch (item.gender) {
              case 1:
                item.gender = "女";
                break;
              case 0:
                item.gender = "男";
                break;
              default:
                item.gender = "暂无数据";
            }
            switch (item.age) {
              case 5:
                item.age = ">56岁";
                break;
              case 4:
                item.age = "46-55岁";
                break;
              case 3:
                item.age = "31-45岁";
                break;
              case 2:
                item.age = "19-30岁";
                break;
              case 1:
                item.age = "<18岁";
                break;
              default:
                item.age = "暂无数据";
            }
          });
          _this2.tableData = list;
          _this2.loading = false;
        } else {
          _this2.tableData = [];
          _this2.loading = false;
          _this2.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
        }
      }).catch(function (error) {
        _this2.$message({
          type: "error",
          message: "请求超时,请稍后重试",
          duration: 1000
        });
      });
    },
    detailView: function detailView(index, row) {
      console.log(row);
      this.showResult = true;
      this.resultData = [];
      this.activeRow = row;
      this.doSearch();
    },
    checkNetwork: function checkNetwork() {
      var _this3 = this;

      this.environment = "";
      this.$request.getServiceConfigs({
        anchangId: this.anchangId
      }).then(function (response) {
        var res = response.data;
        console.log(res);
        if (res.code == "1000") {
          //判断内外网
          _this3.countSend = 0;
          var that = _this3;
          if (res.data.marginIp) {
            var ip = res.data.marginIp.split("//")[1].split(":")[0];
            //开始计时
            var startTime = new Date().getTime();
            axios.get("https://" + ip + "/ping").then(function (response) {
              if (response.status == "200") {
                _this3.environment = 0; //局域网内
                that.sendServer("true");
              } else {
                _this3.environment = 1;
                that.sendServer("false");
              }
            }).catch(function (error) {
              var endTime = new Date().getTime();
              console.log(endTime - startTime);
              var catchTime = endTime - startTime;
              if (catchTime < 3000) {
                that.environment = 0; //局域网内
                that.sendServer("true");
                that.$alert("内网版可以看到每条记录的动态视频，如想使用请点击确定进入新页面授权，选择“高级”->“继续前往”", "监测到内网环境", {
                  confirmButtonText: "确定",
                  callback: function callback(action) {
                    window.open("https://" + ip, "_blank");
                  }
                });
              } else {
                that.environment = 1;
                that.sendServer("false");
              }
            });
            //5秒未应答认为是外网
            setTimeout(function () {
              if (!this.environment) {
                that.environment = 1;
                that.sendServer("false");
              }
            }, 5000);
          } else {
            that.environment = 1;
            that.sendServer("false");
          }
        }
      });
    },

    //向后台发送网络状态
    sendServer: function sendServer(net) {
      this.countSend++;
      if (this.countSend == 1) {
        this.$request.setNetworkEnv({
          anchangId: this.anchangId,
          intranet: net
        }).then(function (response) {
          console.log(response);
        });
      }
    },


    /***************************** 拍照核验检索结果弹窗 **********************/
    doSearch: function doSearch() {
      var _this4 = this;

      this.loading1 = true;
      this.$request.getPzhyResult({
        key: this.activeRow.keySuffix,
        version: this.activeRow.version,
        pageNo: this.searchCurrentPage,
        pageSize: this.searchPageSize
      }).then(function (res) {
        _this4.loading1 = false;
        if (res.data.code == "1000") {
          console.log(res.data.data);
          // this.resultData = res.data.data;
          // this.searchTotal = this.resultData.length;
          _this4.searchTotal = res.data.data.length;
          if (_this4.searchTotal !== 0) {
            res.data.currPageList.forEach(function (item, indx) {
              item.index = indx + 1;
              item.createTime = item.createTime;
            });
            _this4.resultData = res.data.currPageList;
            _this4.resultData.forEach(function (item) {
              item.anchangName = _this4.anchangName;
              //内网加载视频预览
              if (_this4.environment == 0) {
                var timestamp = new Date(item.createTime).getTime();
                var date = _this4.common.getTime(timestamp).split(" ")[0].replace("-", "").replace("-", "");
                var start = _this4.common.getTime(timestamp - 10000).split(" ")[1].replace(":", "").replace(":", "");
                var end = _this4.common.getTime(timestamp + 10000).split(" ")[1].replace(":", "").replace(":", "");
                var data = {
                  anchangId: _this4.anchangId,
                  beginTime: date + "t" + start + "z",
                  endTime: date + "t" + end + "z",
                  camId: item.camId
                };
                _this4.$request.getMp4(data).then(function (res) {
                  console.log(res.data);
                  if (res.data.code == 1000) {
                    var func = function func() {
                      //定时任务
                      count++;
                      console.log(count);
                      axios.get(checkUrl + "?temp=" + Math.random()).then(function (response) {
                        if (response.data == "OK") {
                          document.getElementById("text" + item.id).style.display = "none";
                          document.getElementById("table" + item.id).setAttribute("src", playUrl);
                          clearInterval(interval); //停止
                        }
                        if (response.data == "ER") {
                          document.getElementById("text" + item.id).style.display = "";
                          clearInterval(interval); //停止
                        }
                        if (count == 20) {
                          document.getElementById("text" + item.id).style.display = "";
                          clearInterval(interval); //停止
                        }
                      }).catch(function (error) {
                        document.getElementById("text" + item.id).style.display = "";
                        clearInterval(interval); //停止
                      });
                    };

                    var count = 0;
                    var checkUrl = res.data.data.checkUrl;
                    var playUrl = res.data.data.playUrl;
                    var _this = _this4;

                    var interval = setInterval(func, 6000); //轮询
                  } else {
                    console.error(res.data.msg);
                    document.getElementById("text" + item.id).style.display = "";
                  }
                }).catch(function (err) {
                  document.getElementById("text" + item.id).style.display = "";
                  console.error(err);
                });
              }
            });
          } else {
            _this4.resultData = [];
          }
        } else {
          _this4.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
        }
      }).catch(function (error) {
        _this4.loading1 = false;
        console.error(error);
        _this4.$message({
          type: "error",
          message: "请求超时,请稍后重试",
          duration: 1000
        });
      });
    },


    //每页的查询
    handleSizeChange: function handleSizeChange(val) {
      console.log("\u6BCF\u9875 " + val + " \u6761");
      this.searchPageSize = parseInt("" + val);
      this.doSearch();
    },

    //调转的每页查询
    directHandleCurrentChange: function directHandleCurrentChange(val) {
      this.searchCurrentPage = parseInt("" + val);
      this.doSearch();
    },

    //查看录像
    openVideo: function openVideo(index, row) {
      this.dialogVideo = true;
      this.PvideoLoading = true;
      this.videoImageName = row.realImageName;
      this.viedoACid = row.anchangId;
      this.viedoCreateTime = new Date(row.createTime).getTime();
      this.getVideo();
    },
    getVideo: function getVideo() {
      var _this5 = this;

      this.$request.getVideo({
        anchangId: this.viedoACid,
        imageName: this.videoImageName,
        createTime: this.viedoCreateTime,
        beforeSeconds: this.beforeSeconds,
        afterSeconds: this.afterSeconds
      }).then(function (res) {
        if (res.data.code == 1000) {
          _this5.videoSrc = res.data.data.playUrl;
          _this5.cmdId = res.data.data.cmdId;
          var count = 0;
          var flag = 0;

          var _this = _this5;
          if (_this5.cmdId == -1) {
            _this.$nextTick(function () {
              var videoElement = document.getElementById("videoElement");
              _this.flvPlayer = flvjs.createPlayer({
                type: "flv",
                url: _this.videoSrc,
                hasAudio: false,
                config: {
                  enableWorker: true,
                  enableStashBuffer: false,
                  stashInitialSize: 128
                }
              });
              _this.flvPlayer.attachMediaElement(videoElement);
              _this.flvPlayer.load();
              _this.flvPlayer.play();
              _this.PvideoLoading = false;
            });
          } else {
            var func = function func() {
              //定时任务
              count++;
              console.log(count);
              _this.$request.checkVideo({
                cmdId: _this.cmdId
              }).then(function (response) {
                if (response.data.data.code == "3") {
                  _this.$nextTick(function () {
                    var videoElement = document.getElementById("videoElement");
                    _this.flvPlayer = flvjs.createPlayer({
                      type: "flv",
                      url: _this.videoSrc,
                      hasAudio: false,
                      config: {
                        enableWorker: true,
                        enableStashBuffer: false,
                        stashInitialSize: 128
                      }
                    });
                    _this.flvPlayer.attachMediaElement(videoElement);
                    _this.flvPlayer.load();
                    _this.flvPlayer.play();
                    _this.PvideoLoading = false;
                    flag = 1;
                  });
                  clearInterval(_this.interval); //停止
                }
                if (count == 20 && flag == 0) {
                  _this.$message({
                    type: "error",
                    message: "获取视频失败",
                    duration: 1000
                  });
                  clearInterval(_this.interval); //停止
                }
              }).catch(function (error) {
                _this.$message({
                  type: "error",
                  message: "获取视频失败",
                  duration: 1000
                });
                console.log("error=", error);
                clearInterval(_this.interval); //停止
              });
            };

            _this.interval = setInterval(func, 6000); //轮询
          }
        }
      });
    },

    //快进20s
    speed: function speed() {
      this.PvideoLoading = true;
      this.beforeSeconds += -20;
      this.afterSeconds += 20;
      this.getVideo();
    },

    //后退20s
    back: function back() {
      this.PvideoLoading = true;
      this.beforeSeconds += 20;
      this.afterSeconds += -20;
      this.getVideo();
    },
    closeVideo: function closeVideo() {
      clearInterval(this.interval); //停止
      var param = void 0;
      if (this.cmdId == -1) {
        param = {
          anchangId: this.viedoACid,
          url: this.videoSrc
        };
      } else {
        param = {
          anchangId: this.viedoACid,
          url: this.videoSrc,
          cmdId: this.cmdId
        };
      }
      this.$request.stopVideo(param).then(function (res) {});
      this.dialogVideo = false;
    }
  },
  created: function created() {
    var _this6 = this;

    var param = JSON.parse(window.localStorage.getItem("param"));
    this.riskPath = param.riskImagePathPrefix;
    var rootAdminInfo = JSON.parse(Object(utils["a" /* Decrypt */])(window.sessionStorage.getItem("rootAdminInfo")));
    var id = rootAdminInfo.id;
    var pid = rootAdminInfo.corId;
    this.role = rootAdminInfo.role;
    this.level = rootAdminInfo.level;
    var anchangIds = rootAdminInfo.anchangId;
    var cityName = rootAdminInfo.cityName;
    var params = {};
    if (this.level == 0 || this.level == -1) {
      params = { anchangIds: anchangIds, cityName: cityName, level: this.level };
    } else {
      params = {
        corId: pid,
        cityName: cityName,
        anchangIds: anchangIds,
        level: this.level
      };
    }

    var key = void 0;
    var num = 0;
    //请求案场数据
    this.$request.searchAnchang({ admin: rootAdminInfo, allowEmptyChild: false }).then(function (res) {
      var data = res.data.data.treeNodes;
      if (data.length == 0) {
        _this6.$message({
          type: "warning",
          message: "当前账号没有可查看案场！",
          duration: 1000
        });
        return;
      }
      //增加fid
      data.forEach(function (cor) {
        cor.fid = "a" + cor.id;
        if (cor.children) {
          cor.children.forEach(function (area) {
            area.fid = "b" + area.id;
            if (area.children) {
              area.children.forEach(function (city) {
                city.fid = "c" + city.id;
                if (city.children) {
                  city.children.forEach(function (anchang) {
                    anchang.fid = "d" + anchang.id;
                  });
                }
              });
            }
          });
        }
      });
      val(data);
      //给每条数据添加value属性
      function val(arr) {
        arr.forEach(function (item, index) {
          item.value = item.id;
          if (item.children) {
            if (item.children.length != 0) {
              val(item.children);
            } else {
              delete item.children;
            }
          }
        });
      }
      _this6.data2 = data;
      console.log(data);

      var fid = void 0;
      _this6.activeId = data[0].children[0].children[0].children[0].id;
      id = data[0].children[0].children[0].children[0].id;
      fid = data[0].children[0].children[0].children[0].fid;
      _this6.anchangId = _this6.$route.params.anchangId ? _this6.$route.params.anchangId : id;
      _this6.anchangName = data[0].children[0].children[0].children[0].name;
      _this6.checkNetwork();
      pid = data[0].id;
      var cityName = data[0].children[0].name;
      var _this = _this6;
      console.log(_this6.$route.params.anchangId);
      _this.$nextTick(function () {
        _this.$refs.tree2.setCurrentKey(this.$route.params.fid ? this.$route.params.fid : fid);
      });
      _this6.groupId.push(pid);
      _this6.groupId.push(cityName);
      _this6.groupId.push(id);

      //请求列表数据
      _this6.getList();
    }).catch(function (err) {
      _this6.$message({
        type: "error",
        message: "请求超时,请稍后重试",
        duration: 1000
      });
    });
  },
  mounted: function mounted() {}
});
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-35f7431c","hasScoped":true,"transformToRequire":{"video":["src","poster"],"source":"src","img":"src","image":"xlink:href"},"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/photoCheck.vue
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"peopleList"},[_c('div',{staticClass:"tree-list"},[_c('p',[_vm._v("案场列表：")]),_vm._v(" "),_c('el-tree',{ref:"tree2",staticClass:"filter-tree",attrs:{"empty-text":"暂无数据","data":_vm.data2,"props":_vm.defaultProps,"expand-on-click-node":false,"default-expand-all":"","highlight-current":"","node-key":"fid"},on:{"node-click":_vm.clickNode}})],1),_vm._v(" "),_c('div',{staticClass:"peopleListForm"},[_vm._m(0),_vm._v(" "),_c('el-table',{directives:[{name:"loading",rawName:"v-loading",value:(_vm.loading),expression:"loading"}],staticStyle:{"width":"100%","margin-top":"20px"},attrs:{"data":_vm.tableData,"border":"","empty-text":_vm.haveData,"element-loading-text":"正在搜索数据","element-loading-spinner":"el-icon-loading","element-loading-background":"rgba(0, 0, 0, 0.8)"}},[_c('el-table-column',{attrs:{"prop":"imageName","label":"核验照片","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_c('img',{staticStyle:{"width":"45%"},attrs:{"src":_vm.riskPath+row.imageName}})]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"beginTime","label":"开始时间"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.beginTime || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"endTime","label":"结束时间"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.endTime || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"gender","label":"性别"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.gender || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"age","label":"年龄"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.age || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"queryTime","label":"检索时间"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.queryTime || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"operation","label":"操作"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('el-button',{attrs:{"size":"mini","type":"primary"},on:{"click":function($event){return _vm.detailView(scope.$index, scope.row)}}},[_vm._v("查看详情")])]}}])})],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"拍照核验检索结果","visible":_vm.showResult,"width":"80%","top":"5vh","close-on-click-modal":false},on:{"update:visible":function($event){_vm.showResult=$event}}},[_c('div',{staticClass:"con-table"},[_c('el-table',{directives:[{name:"loading",rawName:"v-loading",value:(_vm.loading1),expression:"loading1"}],ref:"multipleTable",staticStyle:{"width":"100%"},attrs:{"data":_vm.resultData,"border":"","empty-text":_vm.haveData1,"element-loading-text":"正在搜索","element-loading-spinner":"el-icon-loading","element-loading-background":"rgba(0, 0, 0, 0.8)"}},[_c('el-table-column',{attrs:{"type":"index","width":"50","label":"序号"}}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"name","label":"项目名称","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.anchangName || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"imageName","label":"照片","width":"120"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [(!(scope.row.imageName))?_c('span',[_vm._v("暂无图片")]):_vm._e(),_vm._v(" "),(scope.row.imageName)?_c('el-popover',{attrs:{"placement":"left","title":"","trigger":"hover"}},[_c('div',{staticClass:"contentImg",staticStyle:{"width":"310px"}},[_c('div',{staticClass:"contentImg_Box"},[_c('div',{staticClass:"contentImg_Box_img"},[_c('img',{staticClass:"head_pic",attrs:{"src":_vm.imagePath+scope.row.imageName,"height":"350px"}})]),_vm._v(" "),_c('div',{staticClass:"contentImg_Box_name"},[_vm._v("核验照片")])]),_vm._v(" "),_c('div',{staticClass:"contentImg_Box",staticStyle:{"margin-right":"10px"}},[_c('div',{staticClass:"contentImg_Box_img"},[_c('img',{staticClass:"head_pic",attrs:{"src":_vm.imageUrl,"height":"350px"}})]),_vm._v(" "),_c('div',{staticClass:"contentImg_Box_name"},[_vm._v("当前图片")])])]),_vm._v(" "),(_vm.version==1)?_c('img',{staticClass:"tableImg",staticStyle:{"max-width":"30px"},attrs:{"slot":"reference","src":_vm.imagePath+scope.row.imageName},slot:"reference"}):_vm._e()]):_vm._e(),_vm._v(" "),(scope.row.imageName)?_c('el-popover',{attrs:{"placement":"top","title":"","trigger":"hover"}},[_c('div',{staticClass:"compareImages"},[_c('compare-image',{attrs:{"src1":_vm.imagePath+scope.row.imageName,"src2":_vm.imageUrl,"x":scope.row.x,"y":scope.row.y,"width":scope.row.width,"height":scope.row.height}})],1),_vm._v(" "),(_vm.version!=1)?_c('img',{staticClass:"tableImg",attrs:{"slot":"reference","src":_vm.imagePath+scope.row.imageName},slot:"reference"}):_vm._e()]):_vm._e()]}}])}),_vm._v(" "),(_vm.showPreview)?_c('el-table-column',{attrs:{"prop":"preview","label":"视频预览","width":"120"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('video',{staticStyle:{"width":"100%"},attrs:{"src":"","id":'table'+scope.row.id,"loop":"","muted":"","autoplay":""},domProps:{"muted":true},on:{"click":function($event){return _vm.watchVideo($event)}}}),_vm._v(" "),_c('p',{staticStyle:{"display":"none"},attrs:{"id":'text'+scope.row.id}},[_vm._v("视频加载失败")])]}}],null,false,3950161630)}):_vm._e(),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"createTime","label":"到访时间"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(_vm.common.getTime(row.createTime)))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"createTime","label":"位置","width":"120"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.camName || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"similarity","label":"相似度"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.similarity?row.similarity.toFixed(3):"暂无数据"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"operation","label":"操作","width":"120"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('el-button',{attrs:{"size":"mini","type":"success"},on:{"click":function($event){return _vm.openVideo(scope.$index, scope.row)}}},[_vm._v("查看录像")])]}}])})],1)],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.searchTotal!=0),expression:"searchTotal!=0"}],staticClass:"flowMangement-page"},[_c('el-pagination',{attrs:{"current-page":_vm.searchCurrentPage,"page-size":_vm.searchPageSize,"layout":"total, prev, pager, next, jumper","total":_vm.searchTotal},on:{"size-change":_vm.handleSizeChange,"current-change":_vm.directHandleCurrentChange}})],1)]),_vm._v(" "),_c('el-dialog',{attrs:{"title":"查看录像","before-close":_vm.closeVideo,"visible":_vm.dialogVideo,"width":"50%"},on:{"update:visible":function($event){_vm.dialogVideo=$event}}},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.PvideoLoading),expression:"PvideoLoading"}],staticStyle:{"text-align":"center","padding":"40px"}},[_c('i',{staticClass:"el-icon-loading",staticStyle:{"font-size":"50px"}})]),_vm._v(" "),_c('video',{directives:[{name:"show",rawName:"v-show",value:(!_vm.PvideoLoading),expression:"!PvideoLoading"}],staticStyle:{"width":"100%"},attrs:{"src":"","id":"videoElement","muted":"","autoplay":""},domProps:{"muted":true}},[_vm._v("\n                Your browser is too old which doesn't support HTML5 video.\n            ")]),_vm._v(" "),_c('el-button',{attrs:{"size":"mini"},on:{"click":_vm.back}},[_vm._v("后退20s")]),_vm._v(" "),_c('el-button',{attrs:{"size":"mini"},on:{"click":_vm.speed}},[_vm._v("快进20s")])],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"视频预览","visible":_vm.innerVideo,"before-close":_vm.handleClose1,"width":"50%"},on:{"update:visible":function($event){_vm.innerVideo=$event}}},[_c('video',{staticStyle:{"width":"100%"},attrs:{"id":"viewVideo","src":"","muted":"","autoplay":""},domProps:{"muted":true}})])],1)])}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"peopleList-title el-row"},[_c('span',{staticClass:"peopleList-title_liner"}),_vm._v(" "),_c('span',{staticClass:"peopleList-title_text"},[_vm._v("拍照核验")])])}]
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ var components_photoCheck = (esExports);
// CONCATENATED MODULE: ./src/components/photoCheck.vue
function injectStyle (ssrContext) {
  __webpack_require__("kWMN")
}
var normalizeComponent = __webpack_require__("VU/8")
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-35f7431c"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  photoCheck,
  components_photoCheck,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ var src_components_photoCheck = __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ "kWMN":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })

});