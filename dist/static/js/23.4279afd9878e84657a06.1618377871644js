webpackJsonp([23],{

/***/ "61jz":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ./src/lib/utils.js
var utils = __webpack_require__("n95b");

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/dataManagement/originalData.vue
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var originalData = ({
  name: "originalData",
  data: function data() {
    return {
      rootAdminInfo: {}, //用户信息
      role: "",
      level: "",
      imagePath: "", //图片前缀
      downloadHref: "###", //导出地址
      //导出条件
      dltimesSelect: "",
      dlhaveGlasses: "",
      dlgender: "",
      dlageSelect: "",
      dlDateList: [],

      status: 1, //表格数据 0为回收站  1为在建数据
      data2: [], //设备组数据
      activeId: -2, //选中的案场id
      groupId: [], //0位是集团id，1位是案场id
      haveData: "暂无数据", //无数据时显示的文字
      multipleSelection: [], //表格中被批量选中的行的信息存放
      allMultipleSelection: {}, //表格中所有被批量选中的行的信息存放
      ageType: [], //年龄段
      simAgeType: [], //相似表格年龄段
      similarAgeType: [], //相似访客表格年龄段
      emotionType: [], //情绪

      defaultProps: {
        label: "name"
      }, //设备组数据定制
      pickerOptions: {
        //日期输入框格式
        firstDayOfWeek: 1
      },
      ageOptions: [{
        value: "5",
        label: ">56岁"
      }, {
        value: "4",
        label: "46-55岁"
      }, {
        value: "3",
        label: "31-45岁"
      }, {
        value: "2",
        label: "19-30岁"
      }, {
        value: "1",
        label: "<18岁"
      }],
      timesOptions: [{
        value: "0",
        label: "平静"
      }, {
        value: "1",
        label: "积极"
      }],
      selectCondition: "", //选中条件
      throughStatus: "", //通行状态选择
      gender: "", //性别选择
      haveGlasses: "", //配戴眼镜
      timesSelect: "", //访问次数
      ageSelect: "",
      param: {},
      loading: true, // loding加载
      date: [], //自由选择时间
      monthDate: "", //按月选择时间
      weekDate: "", //按周选择时间
      dateList: [], //选中的时间段存放
      flowUsername: "", // 条件查询用户查询
      flowManagementTable: [
        //表格数据
      ],
      queryFuzzey: 1, //判断是否为执行模糊操作
      flowUsertotel: 0, //总条数
      flowUsercurrentPage: 1, //当前页数
      flowUserPageSize: 1, //一页显示多少条数据
      dialogFormVisible: false, //编辑弹窗
      dialogSimilar: false, //查找相似弹窗
      dialogSimilar2: false, //查找访客相似弹窗
      simLoading: true, //查找相似表格加载动画
      simLoading2: true, //查找相似访客表格加载动画
      similarTable: [], //相似表格数据
      similarTable2: [], //相似访客表格
      similarDegree: "0.900", //相似度
      similarCustom: "", //自定义阈值
      similarTimesSelect: [], //相似表格时间
      similarSelect: [], //相似表格多选
      activeRow: {}, //选中行信息存放
      simActiveRow: {}, //相似数据选中行信息存放
      simActiveRow2: {}, //相似访客选中行信息存放
      similarTotal: 100, //相似数据总条数
      similarCurrentPage: 1, //相似数据当前页
      similarPageShow: false, //分页显示状态
      taskId: "",
      simActiveIndex2: "",
      similarLimt: 20, //相似访客默认展示条数
      serchIdModel: "", //搜索ID
      Updataform: {
        //编辑表单
        gender: "", //性别
        age: "", //年龄
        glasses: "", //是否戴眼镜
        imgurl: "", //访客照片
        type: "0", //人员类型
        index: "" //修改行
      },
      putDialog: false, //添加相似到访的弹窗
      putRadio: "", //选择的mark
      inputSimi: "", //输入的相似度
      visitorId: "", //要加入到相似到访记录中的访客id
      searchMarkinput: "", //搜索标记的用户
      marks: []
    };
  },

  methods: {
    changeStatus: function changeStatus(status) {
      this.flowUsercurrentPage = 1;
      this.status = status;
      this.loading = true;
      this.download();
      this.flowUserManagementqueryFuzzy();
    },

    //批量导出
    download: function download() {
      var startTime = this.dateList.length != 0 ? this.dateList[0] : "";
      var endTime = this.dateList.length != 0 ? this.dateList[1] : "";
      this.downloadHref = window.sessionStorage.getItem("IP") + "/admin/h5/oriRecord/exportAllByCondition?anchangId=" + this.groupId[1] + "&corId=" + this.groupId[0] + "&startTime=" + startTime + "&endTime=" + endTime + "&age=" + this.dlageSelect + "&glasses=" + this.dlhaveGlasses + "&gender=" + this.dlgender + "&emotion=" + this.dltimesSelect + "&status=" + this.status;
    },


    /*****************  树节点点击    ************************ */
    clickNode: function clickNode(a, b, c) {
      this.pageType = "tableList";
      this.serch = "";
      this.flowUsercurrentPage = 1;
      this.activeId = a.id;
      if (!a.children && a.fid.indexOf("d") >= 0) {
        //点击的是最后一级
        this.haveData = "暂无数据";
        this.groupId = [];
        this.groupId.push(Number(b.parent.parent.parent.data.id));
        this.groupId.push(Number(a.id));
      } else {
        this.haveData = "请选择案场查看数据列表";
        this.flowManagementTable = [];
        return;
      }

      this.loading = true;
      this.flowUserManagementqueryFuzzy();
      this.download();
      this.allMultipleSelection = {};
    },

    //每页的查询
    handleSizeChange: function handleSizeChange(val) {
      this.flowUserPageSize = parseInt("" + val);
      this.loading = true; //表格加载动画
      this.flowUserManagementqueryFuzzy();
    },

    //调转的每页查询
    directHandleCurrentChange: function directHandleCurrentChange(val) {
      this.flowUsercurrentPage = parseInt("" + val);
      this.loading = true; //表格加载动画
      this.flowUserManagementqueryFuzzy();
    },


    //表格多选
    handleSelectionChange: function handleSelectionChange(val) {
      this.multipleSelection = val;
      console.log("allMultipleSelection=", this.allMultipleSelection);
    },
    selectOne: function selectOne(selection, row) {
      this.allMultipleSelection[this.flowUsercurrentPage] = selection;
    },
    selectAll: function selectAll(b) {
      this.allMultipleSelection[this.flowUsercurrentPage] = b;
    },


    //筛选条件改变时
    serchChange: function serchChange() {
      this.queryFuzzey = 1;
      this.loading = true; //表格加载动画
      this.flowUsercurrentPage = 1;
      this.dlageSelect = this.ageSelect;
      this.dlhaveGlasses = this.haveGlasses;
      this.dlgender = this.gender;
      this.dltimesSelect = this.timesSelect;

      this.flowUserManagementqueryFuzzy();
      this.download();
    },

    //条件查询数据
    flowUserSel: function flowUserSel() {
      this.queryFuzzey = 1;
      this.loading = true; //表格加载动画
      this.flowUsercurrentPage = 1;
      this.dlageSelect = this.ageSelect;
      this.dlhaveGlasses = this.haveGlasses;
      this.dlgender = this.gender;
      this.dltimesSelect = this.timesSelect;
      this.flowUserManagementqueryFuzzy();
      this.download();
    },

    //重置条件查询数据
    flowUserReset: function flowUserReset() {
      this.loading = true; //表格加载动画
      this.ageSelect = "";
      this.haveGlasses = "";
      this.gender = "";
      this.throughStatus = "";
      this.timesSelect = "";

      this.dlageSelect = this.ageSelect;
      this.dlhaveGlasses = this.haveGlasses;
      this.dlgender = this.gender;
      this.dltimesSelect = this.timesSelect;

      //当前月份

      var date = new Date();
      var year = date.getFullYear();
      var month = date.getMonth();
      var day = date.getDate();
      var startTime = new Date(year, month, day, 0, 0, 0);
      var endTime = void 0;
      var weekDay = date.getDay();
      weekDay == 0 ? weekDay = 7 : date.getDay();
      this.monthDate = new Date(year, month, 1, 0, 0, 0);
      this.weekDate = new Date(year, month, day - (weekDay - 1) + 1, 0, 0, 0);

      if (this.level != 0 && this.level != -1) {
        endTime = new Date().getTime() - 180000;
      } else {
        endTime = new Date(year, month, day, 23, 59, 59).getTime();
      }
      this.date = [startTime, new Date(endTime)];

      this.dateList = [this.common.getTime(startTime.getTime()), this.common.getTime(endTime)];
      this.queryFuzzey = 1;
      this.flowUsercurrentPage = 1;

      this.dlDateList = this.dateList;
      this.flowUserManagementqueryFuzzy();
      this.download();
    },

    //判断条件queryFuzzey 是否为条件查询
    flowUserManagementqueryFuzzy: function flowUserManagementqueryFuzzy() {
      var _this2 = this;

      this.timeList();
      var data = {
        currentPage: this.flowUsercurrentPage,
        pageSize: this.flowUserPageSize,
        startTime: this.dateList.length != 0 ? this.dateList[0] : "",
        endTime: this.dateList.length != 0 ? this.dateList[1] : "",
        age: this.ageSelect,
        glasses: this.haveGlasses,
        gender: this.gender,
        emotion: this.timesSelect,
        // key:this.selectCondition,
        anchangId: this.groupId[1],
        corId: this.groupId[0],
        status: this.status
      };

      this.$request.getOriginalRawData(data).then(function (res) {
        if (res.data.code == "1000") {
          if (res.data.baseURL) _this2.imagePath = res.data.baseURL;
          _this2.ageType = [];
          _this2.loading = false;
          var list = res.data.data.list;
          list.forEach(function (item, index) {
            item.createTime = item.createTime ? _this2.common.getTime(item.createTime) : "";
            if (item.age == 1) {
              _this2.ageType.push("<18岁");
            } else if (item.age == 2) {
              _this2.ageType.push("19-30岁");
            } else if (item.age == 3) {
              _this2.ageType.push("31-45岁");
            } else if (item.age == 4) {
              _this2.ageType.push("46-55岁");
            } else if (item.age == 5) {
              _this2.ageType.push(">56岁");
            } else {
              _this2.ageType.push(null);
            }
            item.index = (res.data.data.pageNum - 1) * res.data.data.pageSize + index + 1;
          });

          _this2.flowManagementTable = list;
          _this2.flowUsertotel = res.data.data.total;
          _this2.flowUsercurrentPage = res.data.data.pageNum;
        } else {
          _this2.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
          _this2.loading = false;
        }
      }).catch(function (err) {
        console.log("err=", err);
        _this2.loading = false;
        _this2.$message({
          type: "error",
          message: "请求超时，请稍后重试!",
          duration: 1000
        });
      });
    },


    //删除
    handleDelete: function handleDelete(index, row) {
      var _this3 = this;

      if (index == -1) {
        //批量删除
        if (this.multipleSelection.length == 0) {
          //未选中设备时提示
          this.$message({
            message: "请选需要删除的数据",
            type: "warning",
            duration: 1000
          });
          return;
        } else {
          this.$confirm("该id将被删除且不可恢复，确认执行该操作？", "提示", {
            confirmButtonText: "确定",
            cancelButtonText: "取消",
            type: "warning"
          }).then(function () {
            var idList = [];
            _this3.multipleSelection.forEach(function (item) {
              idList.push(item.id);
            });
            _this3.$request.delOriginal({ anchangId: _this3.groupId[1], ids: idList }).then(function (res) {
              return callBack(res);
            });
          }).catch(function () {
            _this3.$message({
              type: "error",
              message: "请求超时，请稍后重试!",
              duration: 1000
            });
          });
        }
      } else {
        //单个删除
        this.activeRow = row; //获得选中行信息
        this.$confirm("该id将被删除且不可恢复，确认执行该操作？", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function () {
          _this3.$request.delOriginal({ anchangId: row.anchangId, ids: row.id }).then(function (res) {
            return callBack(res);
          });
        }).catch(function () {
          _this3.$message({
            type: "error",
            message: "请求超时，请稍后重试!",
            duration: 1000
          });
        });
      }
      var callBack = function callBack(res) {
        //单独删除方法
        if (res.data.code == 1000) {
          //删除成功
          _this3.$message({
            type: "success",
            message: "删除成功!",
            duration: 1000
          }); //弹窗
          _this3.flowUserManagementqueryFuzzy();
        } else {
          _this3.$message({
            type: "error",
            message: "删除失败，请稍后重试!",
            duration: 1000
          });
        }
      };
    },


    //改变相似度
    similarDegreeChange: function similarDegreeChange() {
      var _this5 = this;

      this.similarSelect = [];
      this.similarCustom = "";
      if (this.similarDegree != 0) {
        this.$nextTick(function () {
          var _this4 = this;

          this.similarTable.forEach(function (item) {
            if (item.similarity >= parseFloat(_this4.similarDegree)) {
              _this4.$refs.similarTable.toggleRowSelection(item, true);
              item.disabled = false;
              _this4.similarSelect.push(item);
            } else {
              _this4.$refs.similarTable.toggleRowSelection(item, false);
              item.disabled = true;
            }
          });
        });
      } else {
        this.similarTable.forEach(function (item) {
          _this5.$refs.similarTable.toggleRowSelection(item, false);
          item.disabled = true;
        });
      }
    },

    //设置自定义阈值
    similarCustomChange: function similarCustomChange() {
      this.similarSelect = [];
      this.$nextTick(function () {
        var _this6 = this;

        this.similarTable.forEach(function (item) {
          if (item.similarity >= parseFloat(_this6.similarCustom)) {
            _this6.$refs.similarTable.toggleRowSelection(item, true);
            item.disabled = false;
            _this6.similarSelect.push(item);
          } else {
            _this6.$refs.similarTable.toggleRowSelection(item, false);
            item.disabled = true;
          }
        });
      });
    },
    similarTimesChange: function similarTimesChange() {
      this.similarCurrentPage = 1;
      this.taskId = "";
      var startTime = this.similarTimesSelect[0];
      var year = this.similarTimesSelect[1].getFullYear();
      var month = this.similarTimesSelect[1].getMonth();
      var day = this.similarTimesSelect[1].getDate();
      var endTime = new Date(year, month, day, 23, 59, 59);
      this.similarTimesSelect = [this.common.getTime(startTime), this.common.getTime(endTime)];
      this.getSimilarList();
    },

    //打开相似表格
    recovery: function recovery(index, row) {
      var _this7 = this;

      this.similarTimesSelect = this.dateList;
      this.timeList();
      var data = {
        currentPage: this.flowUsercurrentPage,
        pageSize: this.flowUserPageSize,
        startTime: this.dateList.length != 0 ? this.dateList[0] : "",
        endTime: this.dateList.length != 0 ? this.dateList[1] : "",
        age: this.ageSelect,
        glasses: this.haveGlasses,
        gender: this.gender,
        emotion: this.timesSelect,
        anchangId: this.groupId[1],
        corId: this.groupId[0],
        status: this.status
      };
      this.$request.getOriginalRawData(data).then(function (res) {
        if (res.data.code == "1000") {
          if (res.data.baseURL) _this7.imagePath = res.data.baseURL;
          _this7.ageType = [];
          _this7.loading = false;
          var list = res.data.data.list;
          var flag = false;
          for (var i = 0; i <= list.length - 1; i++) {
            if (list[i].id == row.id) {
              flag = true;
              break;
            }
          }
          if (flag) {
            _this7.activeRow = row;
            _this7.dialogSimilar = true;
            _this7.similarCurrentPage = 1;
            _this7.taskId = "";
            _this7.getSimilarList();
          } else {
            _this7.$message({
              type: "warning",
              message: "该记录正在或已被操作!",
              duration: 1000
            });
            list.forEach(function (item, index) {
              item.createTime = item.createTime ? _this7.common.getTime(item.createTime) : "";
              if (item.age == 1) {
                _this7.ageType.push("<18岁");
              } else if (item.age == 2) {
                _this7.ageType.push("19-30岁");
              } else if (item.age == 3) {
                _this7.ageType.push("31-45岁");
              } else if (item.age == 4) {
                _this7.ageType.push("46-55岁");
              } else if (item.age == 5) {
                _this7.ageType.push(">56岁");
              } else {
                _this7.ageType.push(null);
              }
              item.index = (res.data.data.pageNum - 1) * res.data.data.pageSize + index + 1;
            });

            _this7.flowManagementTable = list;
            _this7.flowUsertotel = res.data.data.total;
            _this7.flowUsercurrentPage = res.data.data.pageNum;
          }
        } else {
          _this7.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
          _this7.loading = false;
        }
      });
    },
    similarCurrentPageChange: function similarCurrentPageChange(val) {
      this.similarCurrentPage = val;
      this.getSimilarList();
    },

    //相似表格数据获取
    getSimilarList: function getSimilarList() {
      var _this8 = this;

      this.similarSelect = [];
      this.simLoading = true;

      var data = {
        anchangId: this.activeRow.anchangId,
        imageName: this.activeRow.imageName,
        startTime: this.similarTimesSelect[0],
        endTime: this.similarTimesSelect[1],
        currentPage: this.similarCurrentPage,
        pageSize: 50
      };
      if (this.taskId != "") {
        data.taskId = this.taskId;
      }
      this.$request.similarRawData(data).then(function (res) {
        _this8.simAgeType = [];
        var list = res.data.data.res;
        _this8.similarTotal = res.data.data.total;
        _this8.taskId = res.data.data.taskId;
        _this8.similarPageShow = true;
        list.forEach(function (item, index) {
          item.createTime = item.createTime ? _this8.common.getTime(item.createTime) : "";
          item.type = "1";
          if (item.age == 1) {
            _this8.simAgeType.push("<18岁");
          } else if (item.age == 2) {
            _this8.simAgeType.push("19-30岁");
          } else if (item.age == 3) {
            _this8.simAgeType.push("31-45岁");
          } else if (item.age == 4) {
            _this8.simAgeType.push("46-55岁");
          } else if (item.age == 5) {
            _this8.simAgeType.push(">56岁");
          } else {
            _this8.simAgeType.push(null);
          }
          item.index = (_this8.similarCurrentPage - 1) * 50 + index + 1;
          item.disabled = true;
        });
        _this8.similarTable = list;
        _this8.similarDegree = "0.900";
        _this8.simLoading = false;
        _this8.$nextTick(function () {
          var _this9 = this;

          this.similarTable.forEach(function (item) {
            if (item.similarity >= parseFloat(_this9.similarDegree)) {
              _this9.similarSelect.push(item);
              _this9.$refs.similarTable.toggleRowSelection(item, true);
              item.disabled = false;
            }
          });
        });
      });
    },

    // 相似表格多选
    similarSelectionChange: function similarSelectionChange(val) {
      this.similarSelect = val;
      this.similarTable.forEach(function (item) {
        if (val.indexOf(item) != -1) {
          item.disabled = false;
        } else {
          item.disabled = true;
        }
      });
    },

    //打开编辑
    similarCreated: function similarCreated(index, row) {
      this.dialogFormVisible = true;
      this.simActiveRow = row;
      this.Updataform.gender = this.simActiveRow.gender + "";
      this.Updataform.age = this.simActiveRow.age ? this.simActiveRow.age + "" : "";
      this.Updataform.glasses = this.simActiveRow.glasses + "";
      this.Updataform.imgurl = this.imagePath + this.simActiveRow.imageName;
      this.Updataform.index = index;
      this.Updataform.type = this.simActiveRow.type;
    },

    //确认编辑
    updataFromRequire: function updataFromRequire() {
      var _this10 = this;

      this.$request.updateOriginalRaw({
        id: this.simActiveRow.id,
        gender: this.Updataform.gender,
        age: this.Updataform.age,
        glasses: this.Updataform.glasses
      }).then(function (res) {
        if (res.data.code == "1000") {
          _this10.dialogFormVisible = false;
          var index = _this10.Updataform.index;
          _this10.$message({
            type: "success",
            message: "修改成功!",
            duration: 1000
          });
          _this10.similarTable[index].gender = _this10.Updataform.gender;
          _this10.similarTable[index].age = _this10.Updataform.age;
          _this10.similarTable[index].glasses = _this10.Updataform.glasses;
          _this10.similarTable[index].type = _this10.Updataform.type;
          if (_this10.Updataform.age == 1) {
            _this10.simAgeType[index] = "<18岁";
          } else if (_this10.Updataform.age == 2) {
            _this10.simAgeType[index] = "19-30岁";
          } else if (_this10.Updataform.age == 3) {
            _this10.simAgeType[index] = "31-45岁";
          } else if (_this10.Updataform.age == 4) {
            _this10.simAgeType[index] = "46-55岁";
          } else if (_this10.Updataform.age == 5) {
            _this10.simAgeType[index] = ">56岁";
          } else {
            _this10.simAgeType[index] = "";
          }
          _this10.flowUserManagementqueryFuzzy();
        } else {
          _this10.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
        }
      }).catch(function (err) {
        _this10.dialogFormVisible = false;
        _this10.$message({
          type: "error",
          message: "请求超时，请稍后重试",
          duration: 1000
        });
      });
    },
    openSimilar2: function openSimilar2(index, row) {
      this.dialogSimilar2 = true;
      this.simActiveRow2 = row;
      this.simActiveIndex2 = index;

      this.serchSimilarList();
    },

    //改变相似访客表格显示条数
    similarLimtChange: function similarLimtChange() {
      this.serchSimilarList();
    },

    //相似数据
    serchSimilarList: function serchSimilarList() {
      var _this11 = this;

      this.serchIdModel = "";
      this.simLoading2 = true;
      this.$request.similarList({
        anchangId: this.simActiveRow2.anchangId,
        imageName: this.simActiveRow2.imageName,
        limit: this.similarLimt
      }).then(function (res) {
        _this11.similarAgeType = [];
        var list = res.data.data;
        _this11.similarTable2 = res.data.data;
        list.forEach(function (item, index) {
          item.createTime = item.createTime ? _this11.common.getTime(item.createTime) : "";
          item.lastVisitTime = item.lastVisitTime ? _this11.common.getTime(item.lastVisitTime) : "";
          item.recVisitTime = item.recVisitTime ? _this11.common.getTime(item.recVisitTime) : "";
          if (item.age == 1) {
            _this11.similarAgeType.push("<18岁");
          } else if (item.age == 2) {
            _this11.similarAgeType.push("19-30岁");
          } else if (item.age == 3) {
            _this11.similarAgeType.push("31-45岁");
          } else if (item.age == 4) {
            _this11.similarAgeType.push("46-55岁");
          } else if (item.age == 5) {
            _this11.similarAgeType.push(">56岁");
          } else {
            _this11.similarAgeType.push("");
          }
          item.index = index + 1;
        });

        _this11.simLoading2 = false;
      }).catch(function (err) {
        _this11.simLoading2 = false;
        _this11.$message({
          type: "error",
          message: "请求超时，请稍后重试",
          duration: 1000
        });
      });
    },
    merge: function merge(index, newRow) {
      var _this12 = this;

      console.log(this.similarSelect);
      var row = this.simActiveRow2;
      var data = this.simActiveRow2;
      console.log(data);
      var arr = [];
      this.similarSelect.forEach(function (item) {
        if (item.id != data.id) {
          arr.push(item.id);
        }
      });
      data.ids = arr;
      if (newRow) {
        this.$confirm("确认归并ID么？", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function () {
          _this12.simLoading2 = true;
          delete data.index;
          delete data.disabled;
          delete data.type;
          data.mergeId = newRow.id;
          data.mergeRedisKey = newRow.redisKey;
          _this12.$request.similarDataMerge(data).then(function (res) {
            if (res.data.code == "1000") {
              _this12.$message({
                type: "success",
                message: "归并成功!",
                duration: 1000
              });
            } else {
              _this12.$message({
                type: "error",
                message: res.data.msg,
                duration: 1000
              });
            }

            _this12.simLoading2 = false;
            _this12.dialogSimilar2 = false;
            _this12.dialogSimilar = false;
            _this12.flowUserManagementqueryFuzzy();
          }).catch(function (err) {
            _this12.simLoading2 = false;

            _this12.$message({
              type: "error",
              message: "请求超时，请稍后重试!",
              duration: 1000
            });
          });
        });
      } else {
        this.$confirm("确认新建ID么？", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function () {
          _this12.simLoading2 = true;
          delete data.index;
          delete data.disabled;
          _this12.$request.similarCreated(data).then(function (res) {
            if (res.data.code == "1000") {
              _this12.$message({
                type: "success",
                message: "新建成功!",
                duration: 1000
              });
            } else {
              _this12.$message({
                type: "error",
                message: res.data.msg,
                duration: 1000
              });
            }

            _this12.simLoading2 = false;

            _this12.dialogSimilar2 = false;
            _this12.dialogSimilar = false;
            _this12.flowUserManagementqueryFuzzy();
          }).catch(function (err) {
            _this12.simLoading2 = false;
            _this12.$message({
              type: "error",
              message: "请求超时，请稍后重试!",
              duration: 1000
            });
          });
        });
      }
    },


    //搜索ID
    serchId: function serchId() {
      var _this13 = this;

      console.log("serchIdModel=", this.serchIdModel);
      this.simLoading2 = true;
      if (this.serchIdModel == "") {
        this.serchSimilarList();
        return false;
      }
      this.$request.serchSimVisitor({
        anchangId: this.groupId[1],
        visitorId: this.serchIdModel,
        oriImageName: this.simActiveRow2.imageName
      }).then(function (res) {
        _this13.similarAgeType = [];
        var list = res.data.data ? res.data.data : [];
        _this13.similarTable2 = res.data.data ? res.data.data : [];

        list.forEach(function (item, index) {
          item.createTime = item.createTime ? _this13.common.getTime(item.createTime) : "";
          item.lastVisitTime = item.lastVisitTime ? _this13.common.getTime(item.lastVisitTime) : "";
          item.recVisitTime = item.recVisitTime ? _this13.common.getTime(item.recVisitTime) : "";
          if (item.age == 1) {
            _this13.similarAgeType.push("<18岁");
          } else if (item.age == 2) {
            _this13.similarAgeType.push("19-30岁");
          } else if (item.age == 3) {
            _this13.similarAgeType.push("31-45岁");
          } else if (item.age == 4) {
            _this13.similarAgeType.push("46-55岁");
          } else if (item.age == 5) {
            _this13.similarAgeType.push(">56岁");
          } else {
            _this13.similarAgeType.push("");
          }
          item.index = index + 1;
        });
        _this13.simLoading2 = false;
      }).catch(function (err) {
        _this13.$message({
          type: "error",
          message: "请求超时，请稍后重试!",
          duration: 1000
        });
        _this13.simLoading2 = false;
      });
    },

    //条件查询时间段选中
    timeList: function timeList() {
      console.log("level:" + this.level);
      this.dateList = [];
      var today = new Date();
      var endTime = void 0;
      var startTime = void 0;
      //选择自由查询
      if (this.date) {
        startTime = this.date[0];
        var year = this.date[1].getFullYear();
        var month = this.date[1].getMonth();
        var day = this.date[1].getDate();
        var chooseDay = new Date(year, month, day, 23, 59, 59);
        if (chooseDay.getTime() >= today.getTime()) {
          if (this.level != 0 && this.level != -1) {
            endTime = today.getTime() - 180000;
          } else {
            endTime = chooseDay.getTime();
          }
        } else {
          endTime = chooseDay.getTime();
        }
        this.dateList = [this.common.getTime(startTime.getTime()), this.common.getTime(endTime)];
      } else {
        if (this.level != 0 && this.level != -1) {
          endTime = today.getTime() - 180000;
          this.dateList = ["", this.common.getTime(endTime)];
        } else {
          this.dateList = [];
        }
      }
      this.dlDateList = this.dateList;
    },


    //搜索
    searchMark: function searchMark() {
      var _this14 = this;

      console.log(this.searchMarkinput);
      this.$request.getMarks({
        anchangId: this.groupId[1],
        realName: this.searchMarkinput
      }).then(function (res) {
        if (res.data.code == "1000") {
          _this14.marks = res.data.data;
        }
      }).catch(function (err) {
        _this14.$message({
          type: "error",
          message: err,
          duration: 1000
        });
      });
    },

    //加入相似到访记录
    putIn: function putIn(index, row) {
      var _this15 = this;

      this.putDialog = true;
      this.visitorId = row.visitorId;
      this.$request.getMarks({
        anchangId: this.groupId[1],
        realName: ""
      }).then(function (res) {
        if (res.data.code == "1000") {
          _this15.marks = res.data.data;
        }
      }).catch(function (err) {
        _this15.$message({
          type: "error",
          message: err,
          duration: 1000
        });
      });
    },

    //确认加入白名单
    addIn: function addIn() {
      var _this16 = this;

      if (!this.putRadio) {
        this.$message({
          type: "warning",
          message: "请选择要关联的用户！",
          duration: 1000
        });
        return;
      }
      this.$request.addWhite({
        similarity: this.inputSimi,
        id: this.putRadio,
        similarVisitorId: this.visitorId
      }).then(function (res) {
        if (res.data.code == "1000") {
          _this16.putDialog = false;
          _this16.$message({
            type: "success",
            message: "添加成功",
            duration: 1000
          });
        }
      }).catch(function (err) {
        _this16.putDialog = false;
        _this16.$message({
          type: "error",
          message: err,
          duration: 1000
        });
      });
    }
  },

  mounted: function mounted() {
    var _this17 = this;

    this.rootAdminInfo = JSON.parse(Object(utils["a" /* Decrypt */])(window.sessionStorage.getItem("rootAdminInfo")));
    //获取图片前缀
    var param = JSON.parse(window.localStorage.getItem("param"));
    this.imagePath = param.imagePathPrefix;
    this.level = this.rootAdminInfo.level;
    this.role = this.rootAdminInfo.role;
    var id = this.rootAdminInfo.id;
    var pid = this.rootAdminInfo.corId;
    var anchangIds = this.rootAdminInfo.anchangId;
    var cityName = this.rootAdminInfo.cityName;
    //当前日期
    var date = new Date();
    var year = date.getFullYear();
    var month = date.getMonth();
    var day = date.getDate();
    var startTime = new Date(year, month, day, 0, 0, 0);
    var endTime = void 0;
    if (this.level != 0 && this.level != -1) {
      endTime = date.getTime() - 180000;
    } else {
      endTime = new Date(year, month, day, 23, 59, 59).getTime();
    }
    var weekDay = date.getDay();
    weekDay == 0 ? weekDay = 7 : date.getDay();
    this.monthDate = new Date(year, month, 1, 0, 0, 0);
    this.weekDate = new Date(year, month, day - (weekDay - 1) + 1, 0, 0, 0);
    this.date = [startTime, new Date(endTime)];
    this.dateList = [this.common.getTime(startTime.getTime()), this.common.getTime(endTime)];
    this.dlDateList = this.dateList;
    var params = {};
    if (this.level == -1 || this.level == 0) {
      params = { anchangIds: anchangIds, cityName: cityName, level: this.level };
    } else {
      params = {
        corId: pid,
        cityName: cityName,
        anchangIds: anchangIds,
        level: this.level
      };
    }

    var key = void 0;
    var num = 0;
    //请求案场数据
    this.$request.searchAnchang({ admin: this.rootAdminInfo, allowEmptyChild: false }).then(function (response) {
      var res = response.data;
      console.log(res);
      if (res.code == "1000") {
        //给每条数据添加value属性，增加唯一标识num
        var _val = function _val(arr) {
          arr.forEach(function (item, index) {
            item.value = item.id;
            if (item.children) {
              if (item.children.length != 0) {
                _val(item.children);
              } else {
                delete item.children;
              }
            }
          });
        };

        _this17.loadingEq = false;
        var data = res.data.treeNodes;
        if (data.length == 0) {
          _this17.$message({
            type: "warning",
            message: "当前账号没有可管理案场！",
            duration: 1000
          });
          return;
        }
        //增加fid
        data.forEach(function (cor) {
          cor.fid = "a" + cor.id;
          if (cor.children) {
            cor.children.forEach(function (area) {
              area.fid = "b" + area.id;
              if (area.children) {
                area.children.forEach(function (city) {
                  city.fid = "c" + city.id;
                  if (city.children) {
                    city.children.forEach(function (anchang) {
                      anchang.fid = "d" + anchang.id;
                    });
                  }
                });
              }
            });
          }
        });
        _val(data);
        _this17.data2 = data;
        console.log(data);

        //默认选中第一个案场
        var fid = void 0;
        if (data.length) {
          _this17.activeId = data[0].children[0].children[0].children[0].id;
          id = data[0].children[0].children[0].children[0].id;
          fid = data[0].children[0].children[0].children[0].fid;
          pid = data[0].id;
        }

        var _this = _this17;
        _this.$nextTick(function () {
          _this.$refs.tree2.setCurrentKey(fid);
        });
        _this17.groupId.push(Number(pid));
        _this17.groupId.push(Number(id));

        _this17.download();
        console.log("downloadHref=", _this17.downloadHref);

        //请求设备列表数据
        _this17.$request.getOriginalRawData({
          currentPage: 1,
          pageSize: 10,
          anchangId: id,
          corId: pid,
          startTime: _this17.dateList[0],
          endTime: _this17.dateList[1]
        }).then(function (res) {
          if (res.data.code == "1000") {
            if (res.data.baseURL) _this17.imagePath = res.data.baseURL;
            _this17.loading = false;
            _this17.flowUserPageSize = 10;
            var list = res.data.data.list;
            _this17.ageType = [];
            _this17.emotionType = [];
            list.forEach(function (item, index) {
              item.createTime = item.createTime ? _this17.common.getTime(item.createTime) : "";
              if (item.age == 1) {
                _this17.ageType.push("<18岁");
              } else if (item.age == 2) {
                _this17.ageType.push("19-30岁");
              } else if (item.age == 3) {
                _this17.ageType.push("31-45岁");
              } else if (item.age == 4) {
                _this17.ageType.push("46-55岁");
              } else if (item.age == 5) {
                _this17.ageType.push(">56岁");
              } else {
                _this17.ageType.push(null);
              }
              item.index = index + 1;
            });
            _this17.flowManagementTable = list;
            _this17.flowUsertotel = res.data.data.total;
            _this17.flowUsercurrentPage = res.data.data.pageNum;
          } else {
            _this17.$message({
              type: "error",
              message: res.data.msg,
              duration: 1000
            });
            _this17.loading = false;
          }
        }).catch(function (err) {
          _this17.$message({
            type: "error",
            message: "请求超时，请稍后重试!",
            duration: 1000
          });
          _this17.loading = false;
        });
      }
    }).catch(function (err) {
      _this17.$message({
        type: "error",
        message: "请求超时，请稍后重试",
        duration: 1000
      });
    });
  }
});
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-7d36e90e","hasScoped":true,"transformToRequire":{"video":["src","poster"],"source":"src","img":"src","image":"xlink:href"},"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/dataManagement/originalData.vue
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"flowMangement"},[_c('div',{staticClass:"tree-list"},[_c('p',[_vm._v("案场列表：")]),_vm._v(" "),_c('el-tree',{ref:"tree2",staticClass:"filter-tree",attrs:{"empty-text":"暂无数据","data":_vm.data2,"props":_vm.defaultProps,"expand-on-click-node":false,"default-expand-all":"","highlight-current":"","node-key":"fid"},on:{"node-click":_vm.clickNode}})],1),_vm._v(" "),_c('div',{staticClass:"dataListForm"},[_vm._m(0),_vm._v(" "),(_vm.level<=0)?_c('div',{staticStyle:{"margin-top":"20px"}},[_c('el-button-group',[_c('el-button',{attrs:{"type":_vm.status==1?'info':'',"title":"已确认"},on:{"click":function($event){return _vm.changeStatus(1)}}},[_vm._v("已确认")]),_vm._v(" "),_c('el-button',{attrs:{"type":_vm.status==0?'info':'',"title":"待确认"},on:{"click":function($event){return _vm.changeStatus(0)}}},[_vm._v("待确认")])],1)],1):_vm._e(),_vm._v(" "),_c('div',[_c('el-tooltip',{staticClass:"item",attrs:{"effect":"dark","content":"导出数据为当前表格显示数据","placement":"right"}},[_c('a',{staticClass:"el-button el-button--primary el-button--small",staticStyle:{"margin-top":"20px"},attrs:{"href":_vm.downloadHref}},[_c('i',{staticClass:"el-icon-download"}),_vm._v(" "),_c('span',[_vm._v("批量导出")])])]),_vm._v(" "),(_vm.role!=0 && _vm.status ==0)?_c('el-button',{attrs:{"type":"danger","size":"small","icon":"el-icon-delete","title":"批量删除"},on:{"click":function($event){return _vm.handleDelete(-1)}}},[_vm._v("批量删除")]):_vm._e(),_vm._v(" "),_c('el-button',{attrs:{"size":"small","icon":"el-icon-refresh"},on:{"click":_vm.flowUserReset}},[_vm._v("刷新")])],1),_vm._v(" "),_c('ul',{staticClass:"flowMangement-serch"},[_c('li',{staticClass:"operation"},[_c('el-button',{staticStyle:{"margin-left":"10px"},attrs:{"type":"success","size":"small"},on:{"click":_vm.flowUserSel}},[_vm._v("查询")]),_vm._v(" "),_c('el-button',{attrs:{"type":"warning","size":"small"},on:{"click":_vm.flowUserReset}},[_vm._v("重置")])],1),_vm._v(" "),_c('li',{staticClass:"time"},[_c('el-date-picker',{attrs:{"popper-class":"dateSelect","type":"daterange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期","picker-options":_vm.pickerOptions},on:{"change":_vm.serchChange},model:{value:(_vm.date),callback:function ($$v) {_vm.date=$$v},expression:"date"}})],1),_vm._v(" "),_c('li',[_c('el-select',{staticStyle:{"width":"120px"},attrs:{"placeholder":"选择情绪"},on:{"change":_vm.serchChange},model:{value:(_vm.timesSelect),callback:function ($$v) {_vm.timesSelect=$$v},expression:"timesSelect"}},_vm._l((_vm.timesOptions),function(item){return _c('el-option',{key:item.value,attrs:{"label":item.label,"value":item.value}})}),1)],1),_vm._v(" "),_c('li',[_c('el-select',{staticStyle:{"width":"120px"},attrs:{"placeholder":"选择年龄"},on:{"change":_vm.serchChange},model:{value:(_vm.ageSelect),callback:function ($$v) {_vm.ageSelect=$$v},expression:"ageSelect"}},_vm._l((_vm.ageOptions),function(item){return _c('el-option',{key:item.value,attrs:{"label":item.label,"value":item.value}})}),1)],1),_vm._v(" "),_c('li',[_c('el-radio-group',{attrs:{"size":"medium"},on:{"change":_vm.serchChange},model:{value:(_vm.gender),callback:function ($$v) {_vm.gender=$$v},expression:"gender"}},[_c('el-radio-button',{attrs:{"label":"0"}},[_vm._v("男")]),_vm._v(" "),_c('el-radio-button',{attrs:{"label":"1"}},[_vm._v("女")])],1)],1)]),_vm._v(" "),_c('ul',{staticClass:"flowMangement-serch"}),_vm._v(" "),_c('div',{staticClass:"flowMangementForm"},[_c('el-row',[_c('el-table',{directives:[{name:"loading",rawName:"v-loading",value:(_vm.loading),expression:"loading"}],ref:"flowManagementTable",staticStyle:{"width":"100%"},attrs:{"data":_vm.flowManagementTable,"border":"","empty-text":_vm.haveData,"element-loading-text":"正在搜索","element-loading-spinner":"el-icon-loading","element-loading-background":"rgba(0, 0, 0, 0.8)"},on:{"selection-change":_vm.handleSelectionChange,"select":_vm.selectOne,"select-all":_vm.selectAll}},[_c('el-table-column',{attrs:{"type":"selection","width":"55"}}),_vm._v(" "),_c('el-table-column',{attrs:{"label":"序号","width":"60"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.index))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"anchangName","label":"区域名称"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.areaName || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"camName","label":"摄像头"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.camName || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"gender","label":"性别","width":"80"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.gender==0?"男":"女"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"age","label":"年龄"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_vm._v(_vm._s(_vm.ageType[scope.$index]||"暂无数据"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"emotion","label":"情绪","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.emotion!=null?(row.emotion==0?"平静":"积极"):'暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"imageUrl","label":"照片"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [(!(scope.row.imageName))?_c('span',[_vm._v("暂无图片")]):_vm._e(),_vm._v(" "),(scope.row.imageName)?_c('el-popover',{attrs:{"placement":"left","title":"","trigger":"hover"}},[_c('img',{staticClass:"head_pic",attrs:{"src":_vm.imagePath+scope.row.imageName,"height":"350px"}}),_vm._v(" "),_c('img',{staticClass:"originalImg",attrs:{"slot":"reference","src":_vm.imagePath+scope.row.imageName},slot:"reference"})]):_vm._e()]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"createTime","label":"到访时间","width":"200"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.createTime || '暂无数据'))]}}])}),_vm._v(" "),(_vm.status == 1)?_c('el-table-column',{attrs:{"prop":"visitorId","label":"访客ID","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.visitorId || '暂无数据'))]}}],null,false,1268913794)}):_vm._e(),_vm._v(" "),(_vm.role!=0 && _vm.status == 0)?_c('el-table-column',{attrs:{"prop":"operation","label":"操作","width":"180"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('el-button',{attrs:{"size":"mini","type":"success"},on:{"click":function($event){return _vm.recovery(scope.$index, scope.row)}}},[_vm._v("寻找相似")]),_vm._v(" "),_c('el-button',{attrs:{"size":"mini","type":"danger"},on:{"click":function($event){return _vm.handleDelete(scope.$index, scope.row)}}},[_vm._v("删除")])]}}],null,false,3319500733)}):_vm._e(),_vm._v(" "),(_vm.role==-1)?_c('el-table-column',{attrs:{"prop":"operation","label":"操作","width":"180"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('el-button',{attrs:{"size":"mini","type":"success"},on:{"click":function($event){return _vm.putIn(scope.$index, scope.row)}}},[_vm._v("关联")])]}}],null,false,2677409148)}):_vm._e()],1)],1)],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.flowUsertotel!=0),expression:"flowUsertotel!=0"}],staticClass:"flowMangement-page"},[_c('el-pagination',{attrs:{"total":_vm.flowUsertotel,"current-page":_vm.flowUsercurrentPage,"page-sizes":[10,20,50,100,200],"page-size":_vm.flowUserPageSize,"layout":"total, sizes, prev, pager, next, jumper"},on:{"size-change":_vm.handleSizeChange,"current-change":_vm.directHandleCurrentChange}})],1)]),_vm._v(" "),_c('el-dialog',{attrs:{"title":"关联","visible":_vm.putDialog,"width":"40%","top":"15vh","close-on-click-modal":false},on:{"update:visible":function($event){_vm.putDialog=$event}}},[_c('el-input',{attrs:{"placeholder":"搜索用户","prefix-icon":"el-icon-search"},on:{"input":_vm.searchMark},model:{value:(_vm.searchMarkinput),callback:function ($$v) {_vm.searchMarkinput=$$v},expression:"searchMarkinput"}}),_vm._v(" "),_c('br'),_c('br'),_vm._v("选择要关联的用户：\n    "),_c('el-radio-group',{model:{value:(_vm.putRadio),callback:function ($$v) {_vm.putRadio=$$v},expression:"putRadio"}},_vm._l((_vm.marks),function(item){return _c('el-radio',{key:item.id,attrs:{"label":item.id}},[_vm._v(_vm._s(item.realName))])}),1),_vm._v(" "),_c('br'),_c('br'),_c('br'),_vm._v(" 输入相似度：\n    "),_c('el-input-number',{attrs:{"precision":3,"step":0.001,"max":1},model:{value:(_vm.inputSimi),callback:function ($$v) {_vm.inputSimi=$$v},expression:"inputSimi"}}),_vm._v(" "),_c('div',{staticClass:"dialog-footer",attrs:{"slot":"footer"},slot:"footer"},[_c('el-button',{on:{"click":function($event){_vm.putDialog = false}}},[_vm._v("取 消")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.addIn()}}},[_vm._v("确 定")])],1)],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"寻找相似","visible":_vm.dialogSimilar,"width":"70%","close-on-click-modal":false},on:{"update:visible":function($event){_vm.dialogSimilar=$event},"close":function($event){_vm.similarPageShow=false}}},[_vm._v("\n    相似度：\n    "),_c('el-radio-group',{attrs:{"size":"medium"},on:{"change":function($event){return _vm.similarDegreeChange()}},model:{value:(_vm.similarDegree),callback:function ($$v) {_vm.similarDegree=$$v},expression:"similarDegree"}},[_c('el-radio-button',{attrs:{"label":"0.900"}},[_vm._v("0.900")]),_vm._v(" "),_c('el-radio-button',{attrs:{"label":"0.850"}},[_vm._v("0.850")]),_vm._v(" "),_c('el-radio-button',{attrs:{"label":" 0.800"}},[_vm._v("0.800")]),_vm._v(" "),_c('el-radio-button',{attrs:{"label":"-1"}},[_vm._v("全部")]),_vm._v(" "),_c('el-radio-button',{attrs:{"label":"0"}},[_vm._v("自定义")])],1),_vm._v(" "),_c('el-input',{directives:[{name:"show",rawName:"v-show",value:(_vm.similarDegree==0),expression:"similarDegree==0"}],staticClass:"input-with-select",staticStyle:{"width":"210px"},attrs:{"placeholder":"请输入自定义阈值","size":"medium"},model:{value:(_vm.similarCustom),callback:function ($$v) {_vm.similarCustom=$$v},expression:"similarCustom"}},[_c('el-button',{attrs:{"slot":"append","icon":"el-icon-search","size":"medium"},on:{"click":_vm.similarCustomChange},slot:"append"})],1),_vm._v(" "),_c('span',{staticStyle:{"margin-left":"10px"}},[_vm._v("时间：")]),_vm._v(" "),_c('el-date-picker',{attrs:{"type":"daterange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期"},on:{"change":_vm.similarTimesChange},model:{value:(_vm.similarTimesSelect),callback:function ($$v) {_vm.similarTimesSelect=$$v},expression:"similarTimesSelect"}}),_vm._v(" "),_c('el-table',{directives:[{name:"loading",rawName:"v-loading",value:(_vm.simLoading),expression:"simLoading"}],ref:"similarTable",attrs:{"data":_vm.similarTable,"element-loading-text":"正在搜索相似数据","element-loading-spinner":"el-icon-loading","element-loading-background":"rgba(0, 0, 0, 0.8)","height":"600"},on:{"selection-change":_vm.similarSelectionChange}},[_c('el-table-column',{attrs:{"type":"selection","width":"55"}}),_vm._v(" "),_c('el-table-column',{attrs:{"label":"序号","width":"60"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.index))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"similarity","label":"相似度"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(Math.round(row.similarity*1000)/1000))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"gender","label":"性别","width":"80"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.gender==0?"男":"女"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"age","label":"年龄"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_vm._v(_vm._s(_vm.simAgeType[scope.$index]||"暂无数据"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"emotion","label":"情绪","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.emotion!=null?(row.emotion==0?"平静":"积极"):'暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"createTime","label":"到访时间","width":"200"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.createTime|| '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"imageUrl","label":"照片"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [(!(scope.row.imageName))?_c('span',[_vm._v("暂无图片")]):_vm._e(),_vm._v(" "),(scope.row.imageName)?_c('el-popover',{attrs:{"placement":"left","title":"","trigger":"hover"}},[_c('img',{staticClass:"head_pic",attrs:{"src":_vm.imagePath+scope.row.imageName,"height":"350px"}}),_vm._v(" "),_c('img',{staticClass:"originalImg",attrs:{"slot":"reference","src":_vm.imagePath+scope.row.imageName},slot:"reference"})]):_vm._e()]}}])}),_vm._v(" "),(_vm.role!=0)?_c('el-table-column',{attrs:{"prop":"operation","label":"操作","width":"180"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('el-button',{attrs:{"size":"mini"},on:{"click":function($event){return _vm.similarCreated(scope.$index, scope.row)}}},[_vm._v("编辑")]),_vm._v(" "),_c('el-button',{attrs:{"size":"mini","disabled":scope.row.disabled,"type":"success"},on:{"click":function($event){return _vm.openSimilar2(scope.$index, scope.row)}}},[_vm._v("归并")])]}}],null,false,304258542)}):_vm._e()],1),_vm._v(" "),_c('el-pagination',{directives:[{name:"show",rawName:"v-show",value:(_vm.similarPageShow),expression:"similarPageShow"}],attrs:{"background":"","layout":"prev, pager, next","total":_vm.similarTotal,"page-size":50,"current-page":_vm.similarCurrentPage},on:{"current-change":_vm.similarCurrentPageChange}})],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"修改数据","visible":_vm.dialogFormVisible,"width":"40%","top":"5vh","close-on-click-modal":false},on:{"update:visible":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{ref:"activeRow",staticClass:"demo-ruleForm",attrs:{"model":_vm.Updataform,"label-width":"100px"}},[_c('el-form-item',{attrs:{"label":"访客性别","prop":"gender"}},[_c('el-radio',{attrs:{"label":"0"},model:{value:(_vm.Updataform.gender),callback:function ($$v) {_vm.$set(_vm.Updataform, "gender", $$v)},expression:"Updataform.gender"}},[_vm._v("男")]),_vm._v(" "),_c('el-radio',{attrs:{"label":"1"},model:{value:(_vm.Updataform.gender),callback:function ($$v) {_vm.$set(_vm.Updataform, "gender", $$v)},expression:"Updataform.gender"}},[_vm._v("女")])],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"类型","prop":"type"}},[_c('el-radio',{attrs:{"label":"0"},model:{value:(_vm.Updataform.type),callback:function ($$v) {_vm.$set(_vm.Updataform, "type", $$v)},expression:"Updataform.type"}},[_vm._v("顾问")]),_vm._v(" "),_c('el-radio',{attrs:{"label":"1"},model:{value:(_vm.Updataform.type),callback:function ($$v) {_vm.$set(_vm.Updataform, "type", $$v)},expression:"Updataform.type"}},[_vm._v("访客")]),_vm._v(" "),_c('el-radio',{attrs:{"label":"-1"},model:{value:(_vm.Updataform.type),callback:function ($$v) {_vm.$set(_vm.Updataform, "type", $$v)},expression:"Updataform.type"}},[_vm._v("工作人员")])],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"访客年龄","prop":"age"}},[_c('el-select',{attrs:{"placeholder":"选择年龄"},model:{value:(_vm.Updataform.age),callback:function ($$v) {_vm.$set(_vm.Updataform, "age", $$v)},expression:"Updataform.age"}},_vm._l((_vm.ageOptions),function(item){return _c('el-option',{key:item.value,attrs:{"label":item.label,"value":item.value}})}),1)],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"访客照片"}},[_c('img',{staticStyle:{"width":"150px"},attrs:{"src":_vm.Updataform.imgurl,"alt":""}})])],1),_vm._v(" "),_c('div',{staticClass:"dialog-footer",attrs:{"slot":"footer"},slot:"footer"},[_c('el-button',{on:{"click":function($event){_vm.dialogFormVisible = false}}},[_vm._v("取 消")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.updataFromRequire()}}},[_vm._v("确 定")])],1)],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"寻找相似","visible":_vm.dialogSimilar2,"append-to-body":"","width":"70%","top":"6vh","close-on-click-modal":false},on:{"update:visible":function($event){_vm.dialogSimilar2=$event}}},[_c('el-radio-group',{attrs:{"size":"medium"},on:{"change":function($event){return _vm.similarLimtChange()}},model:{value:(_vm.similarLimt),callback:function ($$v) {_vm.similarLimt=$$v},expression:"similarLimt"}},[_c('el-radio-button',{attrs:{"label":"20"}},[_vm._v("20条")]),_vm._v(" "),_c('el-radio-button',{attrs:{"label":"50"}},[_vm._v("50条")]),_vm._v(" "),_c('el-radio-button',{attrs:{"label":"80"}},[_vm._v("80条")]),_vm._v(" "),_c('el-radio-button',{attrs:{"label":"-1"}},[_vm._v("全部")])],1),_vm._v(" "),_c('el-input',{staticStyle:{"width":"180px"},attrs:{"size":"medium","placeholder":"搜索ID"},model:{value:(_vm.serchIdModel),callback:function ($$v) {_vm.serchIdModel=$$v},expression:"serchIdModel"}}),_vm._v(" "),_c('el-button',{attrs:{"size":"medium","type":"success"},on:{"click":_vm.serchId}},[_vm._v("搜索")]),_vm._v(" "),_c('el-button',{staticStyle:{"margin-left":"0"},attrs:{"size":"medium","type":"primary"},on:{"click":function($event){return _vm.merge()}}},[_vm._v("新建ID")]),_vm._v(" "),_c('p',[_vm._v("已选中：")]),_vm._v(" "),_c('el-table',{staticStyle:{"width":"100%"},attrs:{"data":[_vm.simActiveRow2]}},[_c('el-table-column',{attrs:{"prop":"gender","label":"性别","width":"80"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.gender==0?"男":"女"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"age","label":"年龄"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_vm._v(_vm._s(_vm.simAgeType[scope.$index]||"暂无数据"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"emotion","label":"情绪","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.emotion!=null?(row.emotion==0?"平静":"积极"):'暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"createTime","label":"到访时间","width":"200"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.createTime|| '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"imageUrl","label":"照片"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [(!(scope.row.imageName))?_c('span',[_vm._v("暂无图片")]):_vm._e(),_vm._v(" "),(scope.row.imageName)?_c('el-popover',{attrs:{"placement":"left","title":"","trigger":"hover"}},[_c('img',{staticClass:"head_pic",attrs:{"src":_vm.imagePath+scope.row.imageName,"height":"350px"}}),_vm._v(" "),_c('img',{staticStyle:{"height":"53px","width":"50px","overflow":"hidden"},attrs:{"slot":"reference","src":_vm.imagePath+scope.row.imageName},slot:"reference"})]):_vm._e()]}}])})],1),_vm._v(" "),_c('p',[_vm._v("比对结果：")]),_vm._v(" "),_c('el-table',{directives:[{name:"loading",rawName:"v-loading",value:(_vm.simLoading2),expression:"simLoading2"}],attrs:{"data":_vm.similarTable2,"element-loading-text":"正在加载...","element-loading-spinner":"el-icon-loading","element-loading-background":"rgba(0, 0, 0, 0.8)","height":"600"}},[_c('el-table-column',{attrs:{"label":"序号","width":"60"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.index))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"id","label":"ID","show-overflow-tooltip":"","width":"80"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.id||"暂无数据"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"imageUrl","label":"底库图片","width":"80"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [(!(scope.row.imageName))?_c('span',[_vm._v("暂无图片")]):_vm._e(),_vm._v(" "),(scope.row.imageName)?_c('el-popover',{attrs:{"placement":"left","title":"","trigger":"hover"}},[_c('img',{staticClass:"head_pic",attrs:{"src":_vm.imagePath+scope.row.imageName,"height":"350px"}}),_vm._v(" "),_c('img',{staticClass:"originalImg",attrs:{"slot":"reference","src":_vm.imagePath+scope.row.imageName},slot:"reference"})]):_vm._e()]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"gender","label":"相似度"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(Math.round(row.similarity*1000)/1000))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"realName","label":"访客姓名","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.realName||"暂无数据"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"gender","label":"性别","width":"60"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.gender==0?"男":"女"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"realAge","label":"年龄"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_vm._v(_vm._s(_vm.similarAgeType[scope.$index] || "暂无数据"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"createTime","label":"首次来访时间","width":"160"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.createTime||"暂无数据"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"recVisitTime","label":"最近来访时间","width":"160"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.recVisitTime||"暂无数据"))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"visitNum","label":"来访次数","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.visitNum?row.visitNum+"次":"暂无数据"))]}}])}),_vm._v(" "),(_vm.role!=0)?_c('el-table-column',{attrs:{"prop":"operation","label":"操作","width":"100"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('el-button',{attrs:{"size":"mini","type":"success"},on:{"click":function($event){return _vm.merge(scope.$index, scope.row)}}},[_vm._v("确认归并")])]}}],null,false,3985293659)}):_vm._e()],1)],1)],1)}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"flowMangement-title el-row"},[_c('span',{staticClass:"flowMangement-title_liner"}),_vm._v(" "),_c('span',{staticClass:"flowMangement-title_text"},[_vm._v("数据管理")]),_vm._v(" "),_c('span',{staticClass:"flowMangement-direction"},[_vm._v(">")]),_vm._v(" "),_c('span',{staticClass:"flowMangement-title_text"},[_vm._v("原始数据")])])}]
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ var dataManagement_originalData = (esExports);
// CONCATENATED MODULE: ./src/components/dataManagement/originalData.vue
function injectStyle (ssrContext) {
  __webpack_require__("LFun")
}
var normalizeComponent = __webpack_require__("VU/8")
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-7d36e90e"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  originalData,
  dataManagement_originalData,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ var components_dataManagement_originalData = __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ "LFun":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })

});