webpackJsonp([27],{

/***/ "0Q2s":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "cbSb":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ./src/lib/utils.js
var utils = __webpack_require__("n95b");

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/projectManagement/channel.vue
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var channel = ({
  name: "channel",
  data: function data() {
    return {
      rootAdminInfo: "", //登录账号信息
      radio: 3, //用户选择的权限
      level: "", //该用户的选择权限，需要从session中获取
      levelName: "", //权限名称
      role: "", //该用户的权限，需要从session中获取
      corId: "", //用户所在集团id
      selectRoleCondition: "", //按角色查询
      keyWord: "", //搜索框 关键字
      tableData: [], //表格数据
      loading: false, //loading 显示
      multipleSelection: [], // 批量删除选择
      DataDictionaryCurrentPage: 1, //来访记录的当前页数
      DataDictionarytotalAllPage: 0, //来访记录数据一共多少条 总计表格条数
      DataDictionaryPageSize: 1, //来访记录每页展示条树 默认十条
      dialogFormdTadaDictionary: false, //更新访客信息是否显示
      DataDictionaryAllInfoShow: "", // 存储修改用户信息
      dialogAddDataDictionaryVisible: false, //新增用户界面
      defaultProps: {
        label: "name"
      },
      data2: [], //集团列表
      groupDisable: false, //分配集团是否可以选择
      haveData: "暂无数据", //无数据时显示的文字
      defaultId: "", //页面初始时默认选中设备组的id
      activeId: -2, //选中的设备组ID
      activeName: "", //选中的设备组ID
      groupId: [], //0-集团，1-城市，2-案场
      dataDictionaryForm: {
        //数据字典表单新增表单验证
        name: "", //用户名称
        status: 1 //状态
      },
      dataDictionaryFormrules: {
        name: [{ required: true, message: "请输渠道名称", trigger: "blur" }, {
          min: 1,
          max: 20,
          message: "用户名字符在 1 到 15 个字符",
          trigger: "blur"
        }],
        status: [{ required: true, message: "请输选择状态", trigger: "blur" }]
      },
      updateDataDictionaryInfo: {
        name: "", //用户名
        status: "" //用户真实姓名
      }, //更新数据字典

      updDataDictionaryRules: {
        name: [{ required: true, message: "渠道名称不能为空", trigger: "blur" }, {
          min: 1,
          max: 100,
          message: "字符在 1 到 100 个字符",
          trigger: "blur"
        }],
        status: [{ required: true, message: "请选择状态", trigger: "blur" }]
      }, //更新数据字典验证
      chooseCorid: "", //选择的集团id
      newCorid: "", //新增选择的集团
      corOptions: []
    };
  },

  methods: {
    /*****************  树节点点击    ************************ */
    clickNode: function clickNode(a, b, c) {
      this.pageType = "tableList";
      this.serch = "";
      this.currentPage = 1;
      this.activeId = a.id;
      if (!a.children && a.id != -1) {
        //是叶子结点且案场id不为-1
        this.haveData = "暂无数据";
        this.groupId = [];
        this.groupId.push(b.parent.parent.parent.data.id); //集团id
        this.groupId.push(b.parent.data.name); //城市name
        this.groupId.push(a.id); //案场id
        this.groupDisable = true;
      } else if (a.children) {
        //非叶子结点
        this.haveData = "请选择案场查渠道列表";
        this.tableData = [];
        return;
      } else {
        //案场id为-1
        this.groupDisable = false;
        this.groupId = [0, 0, -1];
        this.haveData = "暂无数据";
      }

      this.loading = true;
      this.dataDictionaryJudedge();
    },
    handleChange: function handleChange(value) {
      this.dataDictionaryForm.groupId = this.groupId;
    },

    //改变状态
    changeStatus: function changeStatus(index, row) {},
    roleSelectChange: function roleSelectChange() {
      this.loading = true; //表格加载动画
      this.dataDictionaryJudedge();
    },

    //删除数据字典记录
    handleDelete: function handleDelete(index, info) {
      var _this = this;

      this.$confirm("确认删除该渠道么", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(function () {
        _this.loading = true; //表格加载动画
        _this.$request.deleteChannel({ id: info.id }).then(function (response) {
          var res = response.data;

          if (res.code == "1000") {
            _this.loading = false; //表格加载动画
            _this.dataDictionaryJudedge();
            _this.$message({
              message: "删除成功",
              type: "success",
              duration: 1000
            });
          } else {
            _this.$message({
              type: "error",
              message: "删除失败，请稍后重试!",
              duration: 1000
            });
          }
        }).catch(function (err) {
          _this.$message({
            type: "error",
            message: "请求超时，请稍后重试!",
            duration: 1000
          });
        });
      }).catch(function () {});
    },

    //批量删除数据字典数据
    batchDelTable: function batchDelTable() {
      var _this2 = this;

      if (this.multipleSelection.length > 0) {
        var delTableDatas = [];
        delTableDatas = this.multipleSelection.map(function (el) {
          return el.id;
        });
        this.$confirm("确认批量删除这些账号", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function () {
          _this2.loading = true; //表格加载动画
          _this2.$request.userBatchDel({ ids: delTableDatas }).then(function (response) {
            var res = response.data;
            if (res.code == "1000") {
              _this2.loading = true; //表格加载动画
              _this2.dataDictionaryJudedge();
              _this2.$message({
                message: "批量删除成功",
                type: "success",
                duration: 1000
              });
            } else {
              _this2.$message({
                type: "error",
                message: "批量删除失败，请稍后重试!",
                duration: 1000
              });
            }
          }).catch(function (err) {
            _this2.$message({
              type: "error",
              message: "请求超时，请稍后重试!",
              duration: 1000
            });
            console.log("err=", err);
          });
        }).catch(function () {});
      } else {
        this.$message({
          type: "warning",
          message: "请选择需要批量删除的管理员",
          duration: 1000
        });
      }
    },

    //每页的查询
    handleSizeChange: function handleSizeChange(val) {
      this.loading = true; //表格加载动画
      this.DataDictionaryPageSize = parseInt("" + val);
      this.dataDictionaryJudedge();
    },

    //调转的每页查询
    directHandleCurrentChange: function directHandleCurrentChange(val) {
      this.loading = true; //表格加载动画
      this.DataDictionaryCurrentPage = parseInt("" + val);
      this.dataDictionaryJudedge();
    },

    //批量删除选择框控制
    handleSelectionChange: function handleSelectionChange(val) {
      this.multipleSelection = val;
    },

    //关闭更新数据字典记录弹出框
    hiddenEditFormData: function hiddenEditFormData() {
      this.$refs["updateDataDictionaryInfo"].resetFields();
      this.dialogFormdTadaDictionary = false;
    },

    //打开数据字典修改信息
    handleEdit: function handleEdit(index, info) {
      this.DataDictionaryAllInfoShow = info;
      this.updateDataDictionaryInfo.name = info.name;
      this.updateDataDictionaryInfo.status = info.status;
      this.dialogFormdTadaDictionary = !this.dialogFormdTadaDictionary;
    },

    //更新数据字典的信息
    updataFromRequire: function updataFromRequire(updateDataDictionaryInfo) {
      var _this3 = this;

      this.$refs[updateDataDictionaryInfo].validate(function (valid) {
        if (valid) {
          _this3.loading = true; //表格加载动画
          var data = {
            id: _this3.DataDictionaryAllInfoShow.id, //id
            status: _this3.updateDataDictionaryInfo.status
          };
          if (_this3.updateDataDictionaryInfo.name != _this3.DataDictionaryAllInfoShow.name) {
            data.name = _this3.updateDataDictionaryInfo.name;
          }
          _this3.$request.updateChannel(data).then(function (res) {
            if (res.data.code == "1000") {
              _this3.loading = false; //表格加载动画
              _this3.dataDictionaryJudedge();
              _this3.$message({
                message: "更新成功",
                type: "success",
                duration: 1000
              });
              _this3.hiddenEditFormData();
            } else {
              _this3.$message({
                message: res.data.msg,
                type: "error",
                duration: 1000
              });
              _this3.loading = false;
              _this3.hiddenEditFormData();
            }
          }).catch(function (err) {
            _this3.loading = false; //表格加载动画
            _this3.hiddenEditFormData();
            _this3.$message({
              type: "error",
              message: "请求超时，请稍后重试!",
              duration: 1000
            });
            console.log("err=", err);
          });
        } else {
          _this3.$message({
            type: "error",
            message: "请求超时，请稍后重试!",
            duration: 1000
          });
          return false;
        }
      });
    },

    //条件查询字段,根据用户ID来查询
    fuzzySelectField: function fuzzySelectField() {
      this.dataDictionaryJudedge();
    },

    //重置条件查询字段
    resetConditionSel: function resetConditionSel() {
      this.keyWord = "";
      this.selectRoleCondition = "";
      this.DataDictionaryPageSize = 10;
      this.DataDictionaryCurrentPage = 1;
      this.loading = true; //表格加载动画

      this.dataDictionaryJudedge();
    },


    //隐藏新增表单弹出框
    handleDataDictionaryDiag: function handleDataDictionaryDiag() {
      this.$refs["dataDictionaryForm"].resetFields();
      this.dialogAddDataDictionaryVisible = false;
    },


    //确认增加数据字典信息
    dataDictionaryAddRequire: function dataDictionaryAddRequire(dataDictionaryForm) {
      var _this4 = this;

      this.$refs[dataDictionaryForm].validate(function (valid) {
        if (valid) {
          _this4.loading = true; //表格加载动画

          _this4.$request.addChannel({
            name: _this4.dataDictionaryForm.name,
            status: _this4.dataDictionaryForm.status,
            corpId: _this4.newCorid ? _this4.newCorid : _this4.corpId
          }).then(function (response) {
            _this4.dataDictionaryForm.name = "";
            _this4.dataDictionaryForm.status = 1;

            var res = response.data;
            if (res.code == "1000") {
              _this4.$message({
                message: "增加成功",
                type: "success",
                duration: 1000
              });
              _this4.dataDictionaryJudedge();
              _this4.handleDataDictionaryDiag();
            } else {
              _this4.handleDataDictionaryDiag();
              _this4.loading = false;
              _this4.$message({
                type: "error",
                message: res.msg,
                duration: 1000
              });
            }
          }).catch(function (err) {
            console.log("err=", err);
            _this4.$message({
              type: "error",
              message: "请求超时，请稍后重试!",
              duration: 1000
            });
          });
        } else {
          _this4.$message.error("请检查信息是否填写完毕");
          return false;
        }
      });
    },

    //刷新表格
    dataDictionaryJudedge: function dataDictionaryJudedge() {
      var _this5 = this;

      var param = {
        currentPage: this.DataDictionaryCurrentPage,
        pageSize: this.DataDictionaryPageSize,
        corpId: this.corpId
      };
      if (this.keyWord != "") {
        param.name = this.keyWord;
      }

      this.$request.getChannelList(param).then(function (response) {
        var res = response.data;
        if (res.code == "1000") {
          _this5.loading = false;
          var list = res.data.list;
          list.forEach(function (item) {
            item.createTime = item.createTime ? _this5.common.getTime(item.createTime) : "";
          });
          _this5.tableData = list; //total  pages  pageNum
          _this5.DataDictionarytotalAllPage = res.data.total; //记录总条数
          _this5.DataDictionaryCurrentPage = res.data.pageNum; // 当前页数
        }
      }).catch(function (err) {
        _this5.$message({
          type: "error",
          message: "请求超时，请稍后重试!",
          duration: 1000
        });
        console.log("err=", err);
      });
    },

    //内部管理员选集团
    selectCor: function selectCor() {
      console.log(this.chooseCorid);
      this.corpId = this.chooseCorid;
      this.dataDictionaryJudedge();
    }
  },
  //页面进入之前进行渲染
  created: function created() {
    var _this6 = this;

    var rootAdminInfo = JSON.parse(Object(utils["a" /* Decrypt */])(window.sessionStorage.getItem("rootAdminInfo")));

    this.rootAdminInfo = rootAdminInfo;
    this.level = rootAdminInfo.level;
    var level = rootAdminInfo.level;
    this.role = rootAdminInfo.role;
    var anchangIds = rootAdminInfo.anchangId;
    var cityName = rootAdminInfo.cityName;
    var id = rootAdminInfo.id;
    var pid = rootAdminInfo.corId;
    this.corpId = rootAdminInfo.corId;
    var a = rootAdminInfo.level;
    this.DataDictionaryCurrentPage = 1;
    this.DataDictionaryPageSize = 10;

    switch (this.level) {
      case "-1":
        this.levelName = "内部集团";
        break;
      case "1":
        this.levelName = "集团";
        break;
      case "4":
        this.levelName = "大区";
        break;
      case "2":
        this.levelName = "城市";
        break;
      case "3":
        this.levelName = "项目";
        break;
    }

    //请求渠道列表数据
    var p = {
      currentPage: this.DataDictionaryCurrentPage,
      pageSize: this.DataDictionaryPageSize,
      corpId: pid
    };
    this.$request.getChannelList(p).then(function (response) {
      var res = response.data;

      if (res.code == "1000") {
        _this6.loading = false;
        _this6.DataDictionaryPageSize = 10;
        var list = res.data.list;
        if (list.length > 0) {
          list.forEach(function (item) {
            //转化时间
            item.createTime = item.createTime ? _this6.common.getTime(item.createTime) : "";
          });
        }
        _this6.tableData = list; //total  pages  pageNum
        _this6.DataDictionarytotalAllPage = res.data.total; //记录总条数
        _this6.DataDictionaryCurrentPage = res.data.pageNum; // 当前页数
      }
    }).catch(function (err) {
      _this6.$message({
        type: "error",
        message: "请求超时，请稍后重试!",
        duration: 1000
      });
      console.log("err=", err);
    });
  },
  mounted: function mounted() {
    var _this7 = this;

    this.$request.allCorp().then(function (response) {
      var res = response.data;
      if (res.code == "1000") {
        _this7.loading = false;
        _this7.corOptions = res.data;
      }
    });
  }
});
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-369fad20","hasScoped":true,"transformToRequire":{"video":["src","poster"],"source":"src","img":"src","image":"xlink:href"},"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/projectManagement/channel.vue
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"dataDictionary"},[_c('div',{staticClass:"dataDictionaryForm"},[_c('div',{staticClass:"dataDictionary-title el-row"},[_c('span',{staticClass:"dataDictionary-title_liner"}),_vm._v(" "),_c('span',{staticClass:"dataDictionary-title_text"},[_vm._v(_vm._s(_vm.levelName)+"管理")]),_vm._v(" "),_c('span',{staticClass:"dataDictionary-direction"},[_vm._v(">")]),_vm._v(" "),_c('span',{staticClass:"dataDictionary-title_text"},[_vm._v("渠道管理")])]),_vm._v(" "),(_vm.role!=0)?_c('div',{staticClass:"add"},[_c('button',{staticClass:"el-button el-button--success el-button--small",attrs:{"type":"button"},on:{"click":function($event){_vm.dialogAddDataDictionaryVisible = true}}},[_c('i',{staticClass:"el-icon-plus"}),_vm._v(" "),_c('span',[_vm._v("新增渠道")])])]):_vm._e(),_vm._v(" "),_c('ul',{staticClass:"dataDictionary-serch"},[_c('li',{staticClass:"operation"},[_c('el-button',{attrs:{"type":"success","size":"small"},on:{"click":_vm.fuzzySelectField}},[_vm._v("查询")]),_vm._v(" "),_c('el-button',{attrs:{"type":"warning","size":"small"},on:{"click":_vm.resetConditionSel}},[_vm._v("重置")])],1),_vm._v(" "),_c('li',{staticClass:"keyword"},[_c('el-input',{attrs:{"placeholder":"渠道公司名称"},model:{value:(_vm.keyWord),callback:function ($$v) {_vm.keyWord=$$v},expression:"keyWord"}})],1),_vm._v(" "),(_vm.level==-1)?_c('el-select',{attrs:{"placeholder":"请选择集团"},on:{"change":_vm.selectCor},model:{value:(_vm.chooseCorid),callback:function ($$v) {_vm.chooseCorid=$$v},expression:"chooseCorid"}},[_c('el-option',{key:"-1",attrs:{"label":"全部","value":"-1"}}),_vm._v(" "),_vm._l((_vm.corOptions),function(item){return _c('el-option',{key:item.id,attrs:{"label":item.name,"value":item.id}})})],2):_vm._e()],1),_vm._v(" "),_c('el-table',{directives:[{name:"loading",rawName:"v-loading",value:(_vm.loading),expression:"loading"}],staticStyle:{"width":"100%"},attrs:{"data":_vm.tableData,"border":"","element-loading-text":"正在搜索渠道数据","empty-text":_vm.haveData,"element-loading-spinner":"el-icon-loading","element-loading-background":"rgba(0, 0, 0, 0.8)"},on:{"selection-change":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{"prop":"username","label":"渠道ID"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.id || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"username","label":"渠道名称"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.name || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"createtime","label":"创建时间","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.createTime || '暂无数据'))]}}])}),_vm._v(" "),(_vm.role !=0 &&(_vm.level == 1||_vm.level==-1))?_c('el-table-column',{attrs:{"prop":"operation","label":"操作","width":"255"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('el-button',{attrs:{"size":"mini"},on:{"click":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v("编辑")]),_vm._v(" "),_c('el-button',{attrs:{"size":"mini","type":"danger"},on:{"click":function($event){return _vm.handleDelete(scope.$index, scope.row)}}},[_vm._v("删除")])]}}],null,false,268720131)}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"修改渠道信息","visible":_vm.dialogFormdTadaDictionary,"width":"40%","before-close":_vm.hiddenEditFormData,"close-on-click-modal":false},on:{"update:visible":function($event){_vm.dialogFormdTadaDictionary=$event}}},[_c('el-form',{ref:"updateDataDictionaryInfo",staticClass:"demo-ruleForm",attrs:{"model":_vm.updateDataDictionaryInfo,"rules":_vm.updDataDictionaryRules,"label-width":"100px"}},[_c('el-form-item',{attrs:{"label":"渠道名称","prop":"name"}},[_c('el-input',{model:{value:(_vm.updateDataDictionaryInfo.name),callback:function ($$v) {_vm.$set(_vm.updateDataDictionaryInfo, "name", $$v)},expression:"updateDataDictionaryInfo.name"}})],1)],1),_vm._v(" "),_c('div',{staticClass:"dialog-footer",attrs:{"slot":"footer"},slot:"footer"},[_c('el-button',{on:{"click":_vm.hiddenEditFormData}},[_vm._v("取 消")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.updataFromRequire('updateDataDictionaryInfo')}}},[_vm._v("确 定")])],1)],1),_vm._v(" "),_c('div',{staticClass:"dataDictionary-AdddForm"},[_c('el-dialog',{attrs:{"title":"新增渠道","visible":_vm.dialogAddDataDictionaryVisible,"width":"40%","before-close":_vm.handleDataDictionaryDiag,"close-on-click-modal":false},on:{"update:visible":function($event){_vm.dialogAddDataDictionaryVisible=$event}}},[_c('div',{staticClass:"addFormInfo"},[_c('el-form',{ref:"dataDictionaryForm",staticClass:"demo-ruleForm",attrs:{"model":_vm.dataDictionaryForm,"rules":_vm.dataDictionaryFormrules,"label-width":"100px"}},[(_vm.level==-1)?_c('el-form-item',{attrs:{"label":"选择集团","prop":"name"}},[_c('el-select',{attrs:{"placeholder":"请选择集团"},model:{value:(_vm.newCorid),callback:function ($$v) {_vm.newCorid=$$v},expression:"newCorid"}},_vm._l((_vm.corOptions),function(item){return _c('el-option',{key:item.id,attrs:{"label":item.name,"value":item.id}})}),1)],1):_vm._e(),_vm._v(" "),_c('el-form-item',{attrs:{"label":"渠道名称","prop":"name"}},[_c('el-input',{model:{value:(_vm.dataDictionaryForm.name),callback:function ($$v) {_vm.$set(_vm.dataDictionaryForm, "name", $$v)},expression:"dataDictionaryForm.name"}})],1)],1)],1),_vm._v(" "),_c('span',{staticClass:"dialog-footer",attrs:{"slot":"footer"},slot:"footer"},[_c('el-button',{on:{"click":_vm.handleDataDictionaryDiag}},[_vm._v("取 消")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.dataDictionaryAddRequire('dataDictionaryForm')}}},[_vm._v("确 定")])],1)])],1),_vm._v(" "),_c('div',{staticClass:"dataDictionary-page"},[_c('el-pagination',{attrs:{"current-page":_vm.DataDictionaryCurrentPage,"page-sizes":[5,10,15,20],"page-size":_vm.DataDictionaryPageSize,"total":_vm.DataDictionarytotalAllPage,"layout":"total, sizes, prev, pager, next, jumper"},on:{"size-change":_vm.handleSizeChange,"current-change":_vm.directHandleCurrentChange}})],1)],1)])}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ var projectManagement_channel = (esExports);
// CONCATENATED MODULE: ./src/components/projectManagement/channel.vue
function injectStyle (ssrContext) {
  __webpack_require__("0Q2s")
}
var normalizeComponent = __webpack_require__("VU/8")
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-369fad20"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  channel,
  projectManagement_channel,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ var components_projectManagement_channel = __webpack_exports__["default"] = (Component.exports);


/***/ })

});