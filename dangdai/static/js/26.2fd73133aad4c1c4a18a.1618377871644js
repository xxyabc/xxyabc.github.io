webpackJsonp([26],{

/***/ "d6bR":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ./node_modules/babel-runtime/core-js/json/stringify.js
var stringify = __webpack_require__("mvHQ");
var stringify_default = /*#__PURE__*/__webpack_require__.n(stringify);

// EXTERNAL MODULE: ./src/lib/utils.js
var utils = __webpack_require__("n95b");

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/systemManagement/peopleManagement.vue

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var peopleManagement = ({
  name: "dataDictionary",
  data: function data() {
    return {
      rootAdminInfo: {}, //用户信息
      flag: "", //新增时用户添加的权限
      radio3: "", //更新时向后台传递参数
      status2: false, //控制编辑时不同角色的选择
      status1: false, //用于编辑时，用户的选择权限
      radio: 3, //用户选择的权限
      roleRadio: 0, //用户选择的角色
      radio2: "", //编辑时用户的角色选择
      level: "", //该用户的选择权限，需要从session中获取
      role: "", //该用户的权限，需要从session中获取
      selectRoleCondition: "0", //按角色查询
      keyWord: "", //搜索框 关键字
      tableData: [], //表格数据
      loading: true, //loading 显示
      multipleSelection: [], // 批量删除选择
      judgePage: 0, //搜索状态查询状态
      DataDictionaryCurrentPage: 1, //当前页数
      DataDictionarytotalAllPage: 0, //总计表格条数
      DataDictionaryPageSize: 10, //每页展示条树 默认十条
      dialogFormdTadaDictionary: false, //更新访客信息是否显示
      DataDictionaryAllInfoShow: "", // 存储修改用户信息
      dialogAddDataDictionaryVisible: false, //新增用户界面
      defaultProps: {
        label: "name",
        multiple: true
      },
      data2: [], //集团列表
      showGL: true, //是否显示风控管理员选项
      distributionOption: [], //分配集团下拉
      groupId: [],
      groupId2: "", //用户选择的集团id
      dataDictionaryForm: {
        //数据字典表单新增表单验证
        userName: "", //用户名称
        passWord: "", //密码
        realName: "", //真实姓名
        email: "", //用户邮箱
        phone: "", //手机号码
        groupId: [], //用户保存的集团Id
        radio: "0",
        roleRadio: -1
      },
      dataDictionaryFormrules: {
        userName: [{ required: true, message: "请输入用户名", trigger: "blur" }],
        passWord: [{ required: true, message: "请输入密码", trigger: "blur" }],
        realName: [{ required: true, message: "请输入真实姓名", trigger: "blur" }],
        email: [{ required: true, message: "请输入邮箱", trigger: "blur" }],
        phone: [{ required: true, message: "请输入手机号码", trigger: "blur" }, {
          min: 11,
          max: 11,
          message: "请输入合理的手机号码",
          trigger: "blur"
        }],
        groupId: [{
          required: true,
          message: "请为用户分配权限",
          trigger: "change",
          type: "array"
        }],
        radio: [{ required: true }],
        roleRadio: [{ required: true }]
      },
      updateDataDictionaryInfo: {
        username: "", //用户名
        realname: "", //用户真实姓名
        password: "", //密码
        email: "", //邮箱
        phone: "" //手机号码
      }, //更新数据字典
      clickStatus: "", //当前点击行的用户状态

      updDataDictionaryRules: {
        realname: [{ required: true, message: "真实姓名不能为空", trigger: "blur" }, {
          min: 1,
          max: 100,
          message: "姓名字符在 1 到 20 个字符",
          trigger: "blur"
        }]
      }, //更新数据字典验证
      showQX: false, //权限弹窗
      groupIdChange: [], //更新后权限
      chooseid: "", //要更改权限的用户id
      QXloading: false //权限查询loading
    };
  },

  methods: {
    /******************************** 删除 *******************************/
    //删除数据字典记录
    handleDelete: function handleDelete(index, info) {
      var _this = this;

      this.$confirm("确认删除该用户", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(function () {
        _this.loading = true; //表格加载动画
        _this.$request.userDel({ id: info.id }).then(function (response) {
          var res = response.data;
          if (res.code == "1000") {
            _this.loading = false; //表格加载动画
            _this.loadTable();
            _this.$message({
              message: "删除成功",
              type: "success",
              duration: 1000
            });
          } else {
            _this.$message({
              type: "error",
              message: "删除失败，请稍后重试!",
              duration: 1000
            });
          }
        }).catch(function (err) {
          _this.$message({
            type: "error",
            message: "请求超时，请稍后重试!",
            duration: 1000
          });
        });
      }).catch(function () {});
    },


    //批量删除数据字典数据
    batchDelTable: function batchDelTable() {
      var _this2 = this;

      if (this.multipleSelection.length > 0) {
        var delTableDatas = [];
        delTableDatas = this.multipleSelection.map(function (el) {
          return el.id;
        });
        this.$confirm("确认批量删除这些账号", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function () {
          _this2.loading = true; //表格加载动画
          _this2.$request.userBatchDel({ ids: delTableDatas }).then(function (response) {
            var res = response.data;
            if (res.code == "1000") {
              _this2.loading = true; //表格加载动画
              _this2.loadTable();
              _this2.$message({
                message: "批量删除成功",
                type: "success",
                duration: 1000
              });
            } else {
              _this2.$message({
                type: "error",
                message: "批量删除失败，请稍后重试!",
                duration: 1000
              });
            }
          }).catch(function (err) {
            _this2.$message({
              type: "error",
              message: "请求超时，请稍后重试!",
              duration: 1000
            });
            console.log("err=", err);
          });
        }).catch(function () {});
      } else {
        this.$message({
          type: "warning",
          message: "请选择需要批量删除的管理员",
          duration: 1000
        });
      }
    },


    //批量删除选择框控制
    handleSelectionChange: function handleSelectionChange(val) {
      this.multipleSelection = val;
    },


    /******************************** 查询 *******************************/
    //条件查询字段,根据用户ID来查询
    fuzzySelectField: function fuzzySelectField() {
      // if (this.keyWord == "") {
      //   this.$message.error("关键字为必填字段,不能为空");
      // } else {
      this.loading = true; //表格加载动画
      this.DataDictionaryPageSize = 10;
      this.DataDictionaryCurrentPage = 1;
      this.loadTable();
      // }
    },

    //筛选类别查询
    roleSelectChange: function roleSelectChange() {
      this.loading = true; //表格加载动画
      console.log(this.selectRoleCondition);
      this.loadTable();
    },

    //重置条件查询字段
    resetConditionSel: function resetConditionSel() {
      this.keyWord = "";
      this.selectRoleCondition = "0";
      this.DataDictionaryPageSize = 10;
      this.DataDictionaryCurrentPage = 1;
      this.loading = true; //表格加载动画

      this.loadTable();
    },

    //改变每页数据个数
    handleSizeChange: function handleSizeChange(val) {
      this.loading = true; //表格加载动画
      this.DataDictionaryPageSize = parseInt("" + val);
      this.loadTable();
    },

    //跳转当前页
    directHandleCurrentChange: function directHandleCurrentChange(val) {
      this.loading = true; //表格加载动画
      this.DataDictionaryCurrentPage = parseInt("" + val);
      this.loadTable();
    },


    /******************************** 新增 *******************************/
    //关闭新增弹窗之前
    handleDataDictionaryDiag: function handleDataDictionaryDiag() {
      this.$refs["dataDictionaryForm"].resetFields();
      this.groupId = [];
      this.radio = 3, this.roleRadio = this.role == 1 ? 1 : 0, this.distributionOption = JSON.parse(stringify_default()(this.data2));
      this.dialogAddDataDictionaryVisible = false;
    },

    //改变权限选项时
    roleChange: function roleChange() {
      if (this.radio == this.level) {
        this.showGL = false;
      } else {
        this.showGL = true;
      }
    },

    //确认增加用户
    dataDictionaryAddRequire: function dataDictionaryAddRequire(dataDictionaryForm) {
      var _this3 = this;

      var auth = this.arrayToObj(this.dataDictionaryForm.groupId);
      console.log(auth);
      var admin = {
        username: this.dataDictionaryForm.userName,
        password: this.dataDictionaryForm.passWord,
        realname: this.dataDictionaryForm.realName,
        email: this.dataDictionaryForm.email,
        phone: this.dataDictionaryForm.phone,
        role: this.roleRadio,
        level: this.radio,
        corId: this.dataDictionaryForm.groupId[0][0]
      };
      this.$refs[dataDictionaryForm].validate(function (valid) {
        if (valid) {
          _this3.loading = true; //表格加载动画
          _this3.$request.addUserNew({
            admin: admin,
            anchangs: auth
          }).then(function (response) {
            _this3.dataDictionaryForm.groupId = [];
            _this3.dataDictionaryForm.radio = "";

            var res = response.data;
            if (res.code == "1000") {
              console.log(res.data);
              _this3.loading = false; //表格加载动画
              _this3.DataDictionaryPageSize = 10;
              _this3.DataDictionaryCurrentPage = 1;
              _this3.DataDictionaryPageSize = 10;
              _this3.keyWord = "";
              _this3.loadTable();
              _this3.$message({
                message: "增加成功",
                type: "success",
                duration: 1000
              });
              _this3.dialogAddDataDictionaryVisible = false;
              _this3.handleDataDictionaryDiag();
            } else {
              _this3.dialogAddDataDictionaryVisible = false;
              _this3.handleDataDictionaryDiag();
              _this3.loading = false;
              _this3.$message({
                type: "error",
                message: res.msg,
                duration: 1000
              });
            }
          }).catch(function (err) {
            _this3.dialogAddDataDictionaryVisible = false;
            console.log("err=", err);
            _this3.$message({
              type: "error",
              message: "请求超时，请稍后重试!",
              duration: 1000
            });
          });
        } else {
          _this3.$message.error("请检查信息是否填写完毕");
          return false;
        }
      });
    },

    //新增/编辑弹窗用户权限分配改变
    handleChange: function handleChange(value) {
      this.dataDictionaryForm.groupId = this.groupId;
      console.log(this.dataDictionaryForm.groupId); //新增弹窗
      console.log(this.groupIdChange); //编辑弹窗
      this.$forceUpdate();
    },


    /******************************** 编辑 *******************************/
    //关闭权限弹窗之前
    emptyCas: function emptyCas() {
      this.groupIdChange = [];
      this.showQX = false;
    },
    remove: function remove(val) {
      console.log(val);
    },

    //打开权限弹窗
    setQX: function setQX(index, row) {
      var _this4 = this;

      this.chooseid = row.id;
      console.log(row);
      this.showQX = true;
      this.QXloading = true;
      this.groupIdChange = [];
      var ids = [];
      this.$request.searchAnchang({
        admin: {
          corId: row.corId,
          id: row.id,
          level: row.level,
          role: row.role,
          username: row.userName,
          type: row.type
        }
      }).then(function (response) {
        var res = response.data;
        if (res.code == "1000") {
          var tree = res.data.treeOrgs;
          for (var c = 0; c < tree.length; c++) {
            var areas = tree[c].districts;
            if (areas.length != 0) {
              for (var i = 0; i < areas.length; i++) {
                var citys = areas[i].cities;
                if (citys.length != 0) {
                  for (var j = 0; j < citys.length; j++) {
                    var anchangs = citys[j].anchangs;
                    if (anchangs.length != 0) {
                      for (var p = 0; p < anchangs.length; p++) {
                        var anchang = [];
                        anchang.push(tree[c].id);
                        anchang.push(areas[i].id);
                        anchang.push(citys[j].id);
                        anchang.push(anchangs[p].id);
                        console.log(anchang);
                        ids.push(anchang);
                      }
                    }
                  }
                }
              }
            }
          }
        }
        _this4.groupIdChange = ids;
        _this4.QXloading = false;
        console.log(_this4.groupIdChange);
      });
    },

    //改权限
    changeQX: function changeQX() {
      var _this5 = this;

      var auth = this.arrayToObj(this.groupIdChange);
      console.log(auth);
      var data = {
        id: this.chooseid,
        anchangs: auth
      };
      this.$request.updateUserNew(data).then(function (res) {
        if (res.data.code == "1000") {
          _this5.$message({
            type: "success",
            message: "权限更改成功！",
            duration: 1000
          });
          _this5.loadTable();
          _this5.showQX = false;
        } else {
          _this5.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
          _this5.showQX = false;
        }
      }).catch(function (err) {
        console.log(err);
        _this5.$message({
          type: "error",
          message: "请求超时，请稍后重试!",
          duration: 1000
        });
        _this5.showQX = false;
      });
    },


    //打开编辑弹窗
    handleEdit: function handleEdit(index, info) {
      console.log(info);
      this.DataDictionaryAllInfoShow = info;
      this.updateDataDictionaryInfo.username = info.username;
      this.updateDataDictionaryInfo.realname = info.realname;
      this.updateDataDictionaryInfo.password = info.password;
      this.updateDataDictionaryInfo.email = info.email;
      this.updateDataDictionaryInfo.phone = info.phone;
      this.dialogFormdTadaDictionary = !this.dialogFormdTadaDictionary;
    },

    //关闭更新弹窗之前
    hiddenEditFormData: function hiddenEditFormData() {
      this.$refs["updateDataDictionaryInfo"].resetFields();
      this.dialogFormdTadaDictionary = false;
    },

    //编辑弹窗确认
    updataFromRequire: function updataFromRequire(updateDataDictionaryInfo) {
      var _this6 = this;

      var admin = {
        id: this.DataDictionaryAllInfoShow.id, //用户id
        password: this.updateDataDictionaryInfo.password,
        realname: this.updateDataDictionaryInfo.realname,
        email: this.updateDataDictionaryInfo.email,
        phone: this.updateDataDictionaryInfo.phone
      };

      this.$refs[updateDataDictionaryInfo].validate(function (valid) {
        if (valid) {
          _this6.loading = true; //表格加载动画
          _this6.$request.updateUserNew(admin).then(function (res) {
            if (res.data.code == "1000") {
              _this6.loading = false; //表格加载动画
              _this6.loadTable();
              _this6.$message({
                message: "更新成功",
                type: "success",
                duration: 1000
              });
              _this6.hiddenEditFormData();
            } else {
              _this6.loading = false; //表格加载动画
              _this6.$message({
                message: res.data.msg,
                type: "error",
                duration: 1000
              });
              _this6.hiddenEditFormData();
            }
          }).catch(function (err) {
            _this6.loading = false; //表格加载动画
            _this6.hiddenEditFormData();
            _this6.$message({
              type: "error",
              message: "请求超时，请稍后重试!",
              duration: 1000
            });
          });
        } else {
          _this6.$message({
            type: "error",
            message: "请求超时，请稍后重试!",
            duration: 1000
          });
          return false;
        }
      });
    },


    //停用/启用
    stopuser: function stopuser(index, row, event) {
      var _this7 = this;

      this.clickStatus = row.status;
      console.log(index, row);
      var data = void 0;
      if (row.status == 1) {
        data = {
          id: row.id, //用户id
          status: 0
        };
      } else {
        data = {
          id: row.id, //用户id
          status: 1
        };
      }
      this.$request.updateUserNew(data).then(function (res) {
        if (res.data.code == "1000") {
          _this7.$message({
            type: "success",
            message: event.target.innerText == "停用" ? "该用户已停用!" : "该用户已开启!",
            duration: 1000
          });
          _this7.loadTable();
        }
      }).catch(function (err) {
        console.log(err);
        _this7.$message({
          type: "error",
          message: "请求超时，请稍后重试!",
          duration: 1000
        });
      });
    },


    //加载页面表格
    loadTable: function loadTable() {
      var _this8 = this;

      var data = {
        admin: this.rootAdminInfo,
        currentPage: this.DataDictionaryCurrentPage,
        pageSize: this.DataDictionaryPageSize,
        username: this.keyWord,
        level: this.selectRoleCondition
      };
      this.$request.searchUserNew(data).then(function (res) {
        if (res.status == 200 && res.data.code == 1000) {
          console.log(res.data.data);
          _this8.loading = false; //表格加载动画
          var list = res.data.data.list;
          //表格数据转换
          list.forEach(function (item) {
            item.createTime = item.createTime ? _this8.common.getTime(item.createTime) : "";
            item.roleName = _this8.showRole(item.role, item.level);
            item.button = item.status == 1 ? "停用" : "启用";
            item.statusText = item.status == 1 ? "在用" : "停用";
            item.statusColor = item.status == 1 ? "" : "color:red";
          });
          _this8.tableData = list;
          _this8.DataDictionarytotalAllPage = res.data.data.total; //记录总条数
          _this8.DataDictionaryCurrentPage = res.data.data.pageNum; // 当前页数
        } else {
          _this8.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
        }
      }).catch(function (error) {
        console.log("error=", error);
        _this8.$message({
          type: "error",
          message: "请求超时，请稍后重试！",
          duration: 1000
        });
      });
    },

    //显示角色
    showRole: function showRole(_role, _level) {
      var role = void 0;
      var level = void 0;
      switch (_level) {
        case "1":
          level = "集团";
          break;
        case "2":
          level = "城市";
          break;
        case "3":
          level = "项目";
          break;
        case "4":
          level = "大区";
          break;
        default:
          level = "";
      }
      if (_role == 1) {
        role = "风控管理员";
      } else if (_role == 0) {
        role = "风控工作人员";
      } else if (_role == -1) {
        role = "超级管理员";
      } else {
        role = "";
      }
      return level + role;
    },

    //处理权限数据结构
    arrayToObj: function arrayToObj(array) {
      var auth = [];
      for (var i = 0; i < array.length; i++) {
        if (array[i].length == 4) {
          var obj0 = {},
              obj1 = {},
              obj2 = {},
              obj3 = {};
          obj0.id = array[i][0];
          obj1.id = array[i][1];
          obj1.corp = obj0;
          obj2.id = array[i][2];
          obj2.district = obj1;
          obj3.id = array[i][3];
          obj3.city = obj2;
          auth.push(obj3);
        }
      }
      return auth;
    }
  },
  //页面进入之前进行渲染
  created: function created() {
    var _this9 = this;

    this.rootAdminInfo = JSON.parse(Object(utils["a" /* Decrypt */])(window.sessionStorage.getItem("rootAdminInfo")));
    this.level = this.rootAdminInfo.level;
    this.role = this.rootAdminInfo.role;
    console.log("level=", this.level);
    console.log("role=", this.role);
    var anchangIds = this.rootAdminInfo.anchangId;
    var cityName = this.rootAdminInfo.cityName;
    var pid = this.rootAdminInfo.corId;
    var level = this.rootAdminInfo.level;
    this.DataDictionaryCurrentPage = 1;
    this.DataDictionaryPageSize = 10;

    //加载能看到的用户列表
    this.loadTable();

    this.roleChange();

    //加载集团树形列表
    this.$request.searchAnchang({ admin: this.rootAdminInfo, allowEmptyChild: false }).then(function (response) {
      var res = response.data;
      if (res.code == "1000") {
        var _val = function _val(arr) {
          arr.forEach(function (item, index) {
            item.value = item.id;
            if (item.children) {
              if (item.children.length != 0) {
                _val(item.children);
              } else {
                delete item.children;
              }
            }
          });
        };

        console.log(res.data);
        var tree = res.data.treeNodes;
        if (tree.length == 0) {
          _this9.$message({
            type: "warning",
            message: "当前账号没有可管理案场！",
            duration: 1000
          });
          return;
        }
        _val(tree);

        _this9.data2 = tree;
        _this9.distributionOption = tree;
      }
    });
  }
});
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-523dda9e","hasScoped":true,"transformToRequire":{"video":["src","poster"],"source":"src","img":"src","image":"xlink:href"},"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/systemManagement/peopleManagement.vue
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"dataDictionary"},[_vm._m(0),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.role!=0),expression:"role!=0"}],staticClass:"add"},[_c('button',{staticClass:"el-button el-button--success el-button--small",attrs:{"type":"button"},on:{"click":function($event){_vm.dialogAddDataDictionaryVisible = true}}},[_c('i',{staticClass:"el-icon-plus"}),_vm._v(" "),_c('span',[_vm._v("新增")])]),_vm._v(" "),_c('el-button',{attrs:{"type":"danger","size":"small","icon":"el-icon-delete"},on:{"click":_vm.batchDelTable}},[_vm._v("批量删除")])],1),_vm._v(" "),_c('ul',{staticClass:"dataDictionary-serch"},[_c('li',{staticClass:"operation"},[_c('el-button',{attrs:{"type":"success","size":"small"},on:{"click":_vm.fuzzySelectField}},[_vm._v("查询")]),_vm._v(" "),_c('el-button',{attrs:{"type":"warning","size":"small"},on:{"click":_vm.resetConditionSel}},[_vm._v("重置")])],1),_vm._v(" "),_c('li',{staticClass:"keyword"},[_c('el-input',{attrs:{"placeholder":"用户名"},model:{value:(_vm.keyWord),callback:function ($$v) {_vm.keyWord=$$v},expression:"keyWord"}})],1),_vm._v(" "),_c('li',[_c('el-select',{staticStyle:{"width":"90%"},attrs:{"placeholder":"选择角色"},on:{"change":_vm.roleSelectChange},model:{value:(_vm.selectRoleCondition),callback:function ($$v) {_vm.selectRoleCondition=$$v},expression:"selectRoleCondition"}},[_c('el-option',{attrs:{"label":"全部","value":"0"}}),_vm._v(" "),(_vm.level==-1||_vm.level==1)?_c('el-option',{attrs:{"label":"集团","value":"1"}}):_vm._e(),_vm._v(" "),(_vm.level==-1||_vm.level==1||_vm.level==4)?_c('el-option',{attrs:{"label":"大区","value":"4"}}):_vm._e(),_vm._v(" "),(_vm.level==-1||_vm.level==1||_vm.level==4||_vm.level==2)?_c('el-option',{attrs:{"label":"城市","value":"2"}}):_vm._e(),_vm._v(" "),(_vm.level==-1||_vm.level==1||_vm.level==4||_vm.level==2||_vm.level==3)?_c('el-option',{attrs:{"label":"项目","value":"3"}}):_vm._e()],1)],1)]),_vm._v(" "),_c('div',{staticClass:"dataDictionary-AdddForm"},[_c('el-dialog',{attrs:{"title":"新增用户","visible":_vm.dialogAddDataDictionaryVisible,"width":"40%","before-close":_vm.handleDataDictionaryDiag,"close-on-click-modal":false},on:{"update:visible":function($event){_vm.dialogAddDataDictionaryVisible=$event}}},[_c('div',{staticClass:"addFormInfo"},[_c('el-form',{ref:"dataDictionaryForm",staticClass:"demo-ruleForm",attrs:{"model":_vm.dataDictionaryForm,"rules":_vm.dataDictionaryFormrules,"label-width":"100px"}},[_c('el-form-item',{attrs:{"label":"用户名","prop":"userName"}},[_c('el-input',{model:{value:(_vm.dataDictionaryForm.userName),callback:function ($$v) {_vm.$set(_vm.dataDictionaryForm, "userName", $$v)},expression:"dataDictionaryForm.userName"}})],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"密码","prop":"passWord"}},[_c('el-input',{model:{value:(_vm.dataDictionaryForm.passWord),callback:function ($$v) {_vm.$set(_vm.dataDictionaryForm, "passWord", $$v)},expression:"dataDictionaryForm.passWord"}})],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"真实姓名","prop":"realName"}},[_c('el-input',{model:{value:(_vm.dataDictionaryForm.realName),callback:function ($$v) {_vm.$set(_vm.dataDictionaryForm, "realName", $$v)},expression:"dataDictionaryForm.realName"}})],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"用户邮箱","prop":"email"}},[_c('el-input',{model:{value:(_vm.dataDictionaryForm.email),callback:function ($$v) {_vm.$set(_vm.dataDictionaryForm, "email", $$v)},expression:"dataDictionaryForm.email"}})],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"手机号码","prop":"phone"}},[_c('el-input',{model:{value:(_vm.dataDictionaryForm.phone),callback:function ($$v) {_vm.$set(_vm.dataDictionaryForm, "phone", $$v)},expression:"dataDictionaryForm.phone"}})],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"权限层级","prop":"radio"}},[_c('el-radio-group',{on:{"change":_vm.roleChange},model:{value:(_vm.radio),callback:function ($$v) {_vm.radio=$$v},expression:"radio"}},[(_vm.level==-1||_vm.level==1)?_c('el-radio',{attrs:{"label":1}},[_vm._v("集团")]):_vm._e(),_vm._v(" "),(_vm.level==-1||_vm.level==1||_vm.level==4)?_c('el-radio',{attrs:{"label":4}},[_vm._v("大区")]):_vm._e(),_vm._v(" "),(_vm.level==-1||_vm.level==1||_vm.level==4||_vm.level==2)?_c('el-radio',{attrs:{"label":2}},[_vm._v("城市")]):_vm._e(),_vm._v(" "),(_vm.level==-1||_vm.level==1||_vm.level==4||_vm.level==2||_vm.level==3)?_c('el-radio',{attrs:{"label":3}},[_vm._v("项目")]):_vm._e()],1)],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"用户角色","prop":"roleRadio"}},[_c('el-radio-group',{model:{value:(_vm.roleRadio),callback:function ($$v) {_vm.roleRadio=$$v},expression:"roleRadio"}},[_c('el-radio',{directives:[{name:"show",rawName:"v-show",value:(_vm.showGL),expression:"showGL"}],attrs:{"label":1}},[_vm._v("风控管理员")]),_vm._v(" "),_c('el-radio',{attrs:{"label":0}},[_vm._v("风控工作人员")])],1)],1),_vm._v(" "),_c('el-form-item',{ref:"groupId",attrs:{"label":"用户分配","prop":"groupId"}},[_c('el-cascader',{staticStyle:{"width":"100%"},attrs:{"expand-trigger":"hover","options":_vm.distributionOption,"props":_vm.defaultProps},on:{"change":_vm.handleChange},model:{value:(_vm.groupId),callback:function ($$v) {_vm.groupId=$$v},expression:"groupId"}})],1)],1)],1),_vm._v(" "),_c('span',{staticClass:"dialog-footer",attrs:{"slot":"footer"},slot:"footer"},[_c('el-button',{on:{"click":_vm.handleDataDictionaryDiag}},[_vm._v("取 消")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.dataDictionaryAddRequire('dataDictionaryForm')}}},[_vm._v("确 定")])],1)])],1),_vm._v(" "),_c('div',{staticClass:"dataDictionaryForm"},[_c('el-row',[_c('el-table',{directives:[{name:"loading",rawName:"v-loading",value:(_vm.loading),expression:"loading"}],staticStyle:{"width":"100%"},attrs:{"data":_vm.tableData,"border":"","element-loading-text":"正在搜索用户账号","element-loading-spinner":"el-icon-loading","element-loading-background":"rgba(0, 0, 0, 0.8)"},on:{"selection-change":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{"type":"selection","width":"55"}}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"username","label":"用户名"},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.username || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"realname","label":"真实名称","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.realname || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"role","label":"层级","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(_vm.showRole(3, row.level)))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"role","label":"角色","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(_vm.showRole(row.role, 0)))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"role","label":"状态","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_c('span',{style:(row.statusColor)},[_vm._v(_vm._s(row.statusText))])]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"createtime","label":"创建时间","show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var row = ref.row;
return [_vm._v(_vm._s(row.createTime || '暂无数据'))]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"operation","label":"权限管理","width":"130"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('el-button',{attrs:{"size":"mini","type":"success"},on:{"click":function($event){return _vm.setQX(scope.$index, scope.row)}}},[_vm._v("设置")])]}}])}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"operation","label":"操作","width":"255"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('el-button',{attrs:{"size":"mini"},on:{"click":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v("编辑")]),_vm._v(" "),_c('el-button',{attrs:{"size":"mini","type":scope.row.status == 1?'':'primary'},on:{"click":function($event){return _vm.stopuser(scope.$index, scope.row, $event)}}},[_vm._v(_vm._s(scope.row.button))]),_vm._v(" "),_c('el-button',{attrs:{"size":"mini","type":"danger"},on:{"click":function($event){return _vm.handleDelete(scope.$index, scope.row)}}},[_vm._v("删除")])]}}])})],1)],1)],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"修改用户信息","visible":_vm.dialogFormdTadaDictionary,"width":"30%","before-close":_vm.hiddenEditFormData,"close-on-click-modal":false},on:{"update:visible":function($event){_vm.dialogFormdTadaDictionary=$event}}},[_c('el-form',{ref:"updateDataDictionaryInfo",attrs:{"model":_vm.updateDataDictionaryInfo,"rules":_vm.updDataDictionaryRules}},[_c('el-form-item',{attrs:{"label":"用户名","prop":"username"}},[_c('el-input',{attrs:{"disabled":true},model:{value:(_vm.updateDataDictionaryInfo.username),callback:function ($$v) {_vm.$set(_vm.updateDataDictionaryInfo, "username", $$v)},expression:"updateDataDictionaryInfo.username"}})],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"真实名称","prop":"realname"}},[_c('el-input',{model:{value:(_vm.updateDataDictionaryInfo.realname),callback:function ($$v) {_vm.$set(_vm.updateDataDictionaryInfo, "realname", $$v)},expression:"updateDataDictionaryInfo.realname"}})],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"登录密码","prop":"password"}},[_c('el-input',{model:{value:(_vm.updateDataDictionaryInfo.password),callback:function ($$v) {_vm.$set(_vm.updateDataDictionaryInfo, "password", $$v)},expression:"updateDataDictionaryInfo.password"}})],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"用户邮箱","prop":"email"}},[_c('el-input',{model:{value:(_vm.updateDataDictionaryInfo.email),callback:function ($$v) {_vm.$set(_vm.updateDataDictionaryInfo, "email", $$v)},expression:"updateDataDictionaryInfo.email"}})],1),_vm._v(" "),_c('el-form-item',{attrs:{"label":"手机号码","prop":"phone"}},[_c('el-input',{model:{value:(_vm.updateDataDictionaryInfo.phone),callback:function ($$v) {_vm.$set(_vm.updateDataDictionaryInfo, "phone", $$v)},expression:"updateDataDictionaryInfo.phone"}})],1)],1),_vm._v(" "),_c('div',{staticClass:"dialog-footer",attrs:{"slot":"footer"},slot:"footer"},[_c('el-button',{on:{"click":_vm.hiddenEditFormData}},[_vm._v("取 消")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.updataFromRequire('updateDataDictionaryInfo')}}},[_vm._v("确 定")])],1)],1),_vm._v(" "),_c('el-dialog',{staticStyle:{"margin-top":"4vh"},attrs:{"title":"权限管理","visible":_vm.showQX,"width":"50%","before-close":_vm.emptyCas,"close-on-click-modal":false},on:{"update:visible":function($event){_vm.showQX=$event}}},[_c('div',{staticStyle:{"height":"100%"}},[_c('div',{staticStyle:{"display":"flex"}},[_c('i',{staticClass:"el-icon-s-claim",staticStyle:{"color":"#3a8ee6","font-size":"27px"}}),_vm._v(" "),_c('p',{staticStyle:{"font-size":"16px","margin":"5px"}},[_vm._v("修改权限\n          "),_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.QXloading),expression:"QXloading"}],staticStyle:{"font-size":"14px"}},[_vm._v("  当前权限查询中\n            "),_c('i',{staticClass:"el-icon-loading"})])])]),_vm._v(" "),_c('el-cascader',{staticStyle:{"width":"100%"},attrs:{"placeholder":"请选择管理权限","expand-trigger":"hover","options":_vm.distributionOption,"props":_vm.defaultProps,"remove-tag":_vm.remove,"clearable":""},on:{"change":_vm.handleChange},model:{value:(_vm.groupIdChange),callback:function ($$v) {_vm.groupIdChange=$$v},expression:"groupIdChange"}})],1),_vm._v(" "),_c('div',{staticClass:"dialog-footer",attrs:{"slot":"footer"},slot:"footer"},[_c('el-button',{on:{"click":_vm.emptyCas}},[_vm._v("取 消")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":_vm.changeQX}},[_vm._v("确 定")])],1)]),_vm._v(" "),_c('div',{staticClass:"dataDictionary-page"},[_c('el-pagination',{attrs:{"current-page":_vm.DataDictionaryCurrentPage,"page-sizes":[5,10,15,20],"page-size":_vm.DataDictionaryPageSize,"total":_vm.DataDictionarytotalAllPage,"layout":"total, sizes, prev, pager, next, jumper"},on:{"size-change":_vm.handleSizeChange,"current-change":_vm.directHandleCurrentChange}})],1)],1)}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"dataDictionary-title el-row"},[_c('span',{staticClass:"dataDictionary-title_liner"}),_vm._v(" "),_c('span',{staticClass:"dataDictionary-title_text"},[_vm._v("系统管理")]),_vm._v(" "),_c('span',{staticClass:"dataDictionary-direction"},[_vm._v(">")]),_vm._v(" "),_c('span',{staticClass:"dataDictionary-title_text"},[_vm._v("用户管理")])])}]
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ var systemManagement_peopleManagement = (esExports);
// CONCATENATED MODULE: ./src/components/systemManagement/peopleManagement.vue
function injectStyle (ssrContext) {
  __webpack_require__("rkpS")
}
var normalizeComponent = __webpack_require__("VU/8")
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-523dda9e"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  peopleManagement,
  systemManagement_peopleManagement,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ var components_systemManagement_peopleManagement = __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ "rkpS":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })

});