webpackJsonp([30],{

/***/ "i96K":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "kswM":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ./src/lib/utils.js
var utils = __webpack_require__("n95b");

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/projectManagement/configAnchangs.vue
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var configAnchangs = ({
  name: "configAnchangs",
  data: function data() {
    return {
      rootAdminInfo: "", //登录用户信息
      role: "", //角色
      level: "", //权限
      levelName: "", //权限名称
      corId: "", //集团id
      formData: {
        areaNodes: [], //大区
        cityNodes: [], //城市
        anchangNodes: [] //案场
      },
      newarea: '',
      newcity: '',
      newanchang: '',
      chooseArea: "", //选择的大区
      areaOptions: [], //大区的下拉框
      showAddCitys: false, //显示城市新增框
      chooseCity: "", //选择的城市
      cityOptions: [], //城市的下拉框
      showAddAnchangs: false, //显示案场新增框
      deleteDialogVisible: false, //删除提示框
      deleteType: 0, //要删除的节点类型
      deleteNode: {}, //要删除的节点
      deleteI: 0, //要删除的节点index
      msg: "" //删除提示信息
    };
  },

  methods: {
    //刷新
    refrash: function refrash() {
      var _this = this;

      this.formData.areaNodes = [];
      this.formData.anchangNodes = [];
      this.formData.cityNodes = [];
      this.chooseCity = "";
      this.cityOptions = [];
      this.chooseArea = "";
      this.areaOptions = [];

      var rootAdminInfo = JSON.parse(Object(utils["a" /* Decrypt */])(window.sessionStorage.getItem("rootAdminInfo")));
      this.corId = this.$route.params.corId;
      var data = {
        corpId: this.corId
      };
      this.$request.getArea(data).then(function (res) {
        if (res.status == 200 && res.data.code == 1000) {
          console.log(res.data.data);
          for (var i = 0; i < res.data.data.length; i++) {
            var obj = {};
            obj.id = res.data.data[i].id;
            obj.areaName = res.data.data[i].name;
            // this.formData.areaNodes.pop();
            _this.formData.areaNodes.push(obj);
            // this.formData.areaNodes.push({ id: "", areaName: "" });
            var option = {};
            option.value = res.data.data[i].id;
            option.label = res.data.data[i].name;
            _this.areaOptions.push(option);
          }
        } else {
          _this.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
        }
      }).catch(function (error) {
        console.log("error=", error);
        _this.$message({
          type: "error",
          message: "请求超时，请稍后重试！",
          duration: 1000
        });
      });
    },

    //删除
    delNode: function delNode(type, node, i) {
      this.deleteDialogVisible = true;
      this.deleteType = type;
      this.deleteNode = node;
      this.deleteI = i;
      switch (type) {
        case 0:
          this.msg = "该操作将删除该大区下所有案场，确定要删除吗？";
          break;
        case 1:
          this.msg = "该操作将删除该城市下所有案场，确定要删除吗？";
          break;
        case 2:
          this.msg = "该操作将删除该案场，确定要删除吗？";
          break;
      }
    },
    del: function del() {
      var _this2 = this;

      if (this.deleteType == 0) {
        //！！！！！！！！！！！！！！！！！！！！！！！！删除大区的接口
        var data = {
          id: this.deleteNode.id
        };
        this.$request.delArea(data).then(function (res) {
          if (res.status == 200 && res.data.code == 1000) {
            _this2.$message({
              type: "success",
              message: "大区删除成功！",
              duration: 1000
            });
            _this2.formData.areaNodes.splice(_this2.deleteI, 1);
            if (_this2.chooseArea == _this2.deleteNode.id) {
              _this2.refrash();
            }
          } else {
            _this2.$message({
              type: "error",
              message: res.data.msg,
              duration: 1000
            });
          }
        }).catch(function (error) {
          console.log("error=", error);
          _this2.$message({
            type: "error",
            message: "请求超时，请稍后重试！",
            duration: 1000
          });
        });
      }
      if (this.deleteType == 1) {
        //！！！！！！！！！！！！！！！！！！！！！！！！删除城市的接口
        var _data = {
          id: this.deleteNode.id
        };
        this.$request.delCity(_data).then(function (res) {
          if (res.status == 200 && res.data.code == 1000) {
            _this2.$message({
              type: "success",
              message: "城市删除成功！",
              duration: 1000
            });
            _this2.formData.cityNodes.splice(_this2.deleteI, 1);
            _this2.cityOptions.splice(_this2.deleteI, 1);
            if (_this2.chooseCity == _this2.deleteNode.id) {
              _this2.chooseCity = "";
              // this.cityOptions = [];
              _this2.formData.anchangNodes = [];
            }
          } else {
            _this2.$message({
              type: "error",
              message: res.data.msg,
              duration: 1000
            });
          }
        }).catch(function (error) {
          console.log("error=", error);
          _this2.$message({
            type: "error",
            message: "请求超时，请稍后重试！",
            duration: 1000
          });
        });
      }
      if (this.deleteType == 2) {
        //！！！！！！！！！！！！！！！！！！！！！！！！删除案场的接口
        var _data2 = {
          id: this.deleteNode.id
        };
        this.$request.delAnchang(_data2).then(function (res) {
          if (res.status == 200 && res.data.code == 1000) {
            _this2.$message({
              type: "success",
              message: "案场删除成功！",
              duration: 1000
            });
            _this2.formData.anchangNodes.splice(_this2.deleteI, 1);
          } else {
            _this2.$message({
              type: "error",
              message: res.data.msg,
              duration: 1000
            });
          }
        }).catch(function (error) {
          console.log("error=", error);
          _this2.$message({
            type: "error",
            message: "请求超时，请稍后重试！",
            duration: 1000
          });
        });
      }
      this.deleteDialogVisible = false;
    },


    //添加大区
    addAreanode: function addAreanode() {
      var _this3 = this;

      if (this.newarea == "") {
        this.$message({
          type: "warning",
          message: "请填写要新增的大区名称",
          duration: 1000
        });
        return;
      }
      //！！！！！！！！！！！！！！！！！！！！！！！！添加大区的接口
      var data = {
        name: this.newarea,
        corpId: this.corId
      };
      this.$request.addArea(data).then(function (res) {
        if (res.status == 200 && res.data.code == 1000) {
          _this3.$message({
            type: "success",
            message: "大区添加成功！",
            duration: 1000
          });
          var obj = {};
          obj.areaName = _this3.newarea;
          obj.id = res.data.data.id;
          // this.formData.areaNodes.pop();
          _this3.formData.areaNodes.push(obj);
          // this.formData.areaNodes.push({ id: "", areaName: "" });
          var option = {};
          option.value = res.data.data.id;
          option.label = _this3.newarea;
          _this3.areaOptions.push(option);
          _this3.newarea = '';
        } else {
          _this3.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
        }
      }).catch(function (error) {
        console.log("error=", error);
        _this3.$message({
          type: "error",
          message: "请求超时，请稍后重试！",
          duration: 1000
        });
      });
    },


    //添加城市
    addCitynode: function addCitynode(i) {
      var _this4 = this;

      if (this.newcity == '') {
        this.$message({
          type: "warning",
          message: "请填写要新增的城市名称",
          duration: 1000
        });
        return;
      }
      //！！！！！！！！！！！！！！！！！！！！！！！！添加城市的接口
      var data = {
        name: this.newcity,
        corpId: this.corId,
        districtId: this.chooseArea
      };
      this.$request.addCity(data).then(function (res) {
        if (res.status == 200 && res.data.code == 1000) {
          _this4.$message({
            type: "success",
            message: "城市添加成功！",
            duration: 1000
          });
          var obj = {};
          obj.cityName = _this4.newcity;
          obj.id = res.data.data.id;
          // this.formData.cityNodes.pop();
          _this4.formData.cityNodes.push(obj);
          // this.formData.cityNodes.push({ id: "", cityName: "" });
          var option = {};
          option.value = res.data.data.id;
          option.label = _this4.newcity;
          _this4.cityOptions.push(option);
          _this4.newcity = '';
        } else {
          _this4.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
        }
      }).catch(function (error) {
        console.log("error=", error);
        _this4.$message({
          type: "error",
          message: "请求超时，请稍后重试！",
          duration: 1000
        });
      });
    },


    //添加案场
    addAnchangnode: function addAnchangnode(i) {
      var _this5 = this;

      if (this.newanchang == "") {
        this.$message({
          type: "warning",
          message: "请填写要新增的案场名称",
          duration: 1000
        });
        return;
      }
      var anchang = {
        name: this.newanchang,
        cityId: this.chooseCity
      };
      //！！！！！！！！！！！！！！！！！！！！！！！！添加案场的接口
      var data = {
        admin: this.rootAdminInfo,
        anchang: anchang
      };
      this.$request.addAnchang(data).then(function (res) {
        if (res.status == 200 && res.data.code == 1000) {
          _this5.$message({
            type: "success",
            message: "案场添加成功！",
            duration: 1000
          });
          var obj = {};
          obj.anchangName = _this5.newanchang;
          obj.id = res.data.data.id;
          // this.formData.anchangNodes.pop();
          _this5.formData.anchangNodes.push(obj);
          // this.formData.anchangNodes.push({ id: "", anchangName: "" });
          _this5.newanchang = '';
        } else {
          _this5.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
        }
      }).catch(function (error) {
        console.log("error=", error);
        _this5.$message({
          type: "error",
          message: "请求超时，请稍后重试！",
          duration: 1000
        });
      });
    },


    //返回
    goback: function goback() {
      this.$router.push({ name: "groupManagement" });
    },

    //改变大区
    changeArea: function changeArea() {
      var _this6 = this;

      console.log(this.chooseArea);
      this.formData.cityNodes = [];
      this.cityOptions = [];
      this.chooseCity = "";
      //！！！！！！！！！！！！！！！！！！！！！！！！根据chooseArea取现有的所有城市
      var data = {
        admin: this.rootAdminInfo,
        districtId: this.chooseArea
      };
      this.$request.getCity(data).then(function (res) {
        if (res.status == 200 && res.data.code == 1000) {
          console.log(res.data.data);
          for (var i = 0; i < res.data.data.length; i++) {
            var obj = {};
            obj.id = res.data.data[i].id;
            obj.cityName = res.data.data[i].name;
            // this.formData.cityNodes.pop();
            _this6.formData.cityNodes.push(obj);
            // this.formData.cityNodes.push({ id: "", cityName: "" });
            var option = {};
            option.value = res.data.data[i].id;
            option.label = res.data.data[i].name;
            _this6.cityOptions.push(option);
          }
          _this6.showAddCitys = true;
          _this6.showAddAnchangs = false;
          _this6.anchangNodes = [{ id: "", anchangName: "" }];
        } else {
          _this6.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
        }
      }).catch(function (error) {
        console.log("error=", error);
        _this6.$message({
          type: "error",
          message: "请求超时，请稍后重试！",
          duration: 1000
        });
      });
    },

    //改变城市
    changeCity: function changeCity() {
      var _this7 = this;

      console.log(this.chooseCity);
      this.formData.anchangNodes = [];

      //！！！！！！！！！！！！！！！！！！！！！！！！根据chooseCity取现有的所有案场
      var data = {
        admin: this.rootAdminInfo,
        cityId: this.chooseCity
      };
      this.$request.getAnchang(data).then(function (res) {
        if (res.status == 200 && res.data.code == 1000) {
          console.log(res.data.data);
          for (var i = 0; i < res.data.data.length; i++) {
            var obj = {};
            obj.id = res.data.data[i].id;
            obj.anchangName = res.data.data[i].name;
            // this.formData.anchangNodes.pop();
            _this7.formData.anchangNodes.push(obj);
            // this.formData.anchangNodes.push({ id: "", anchangName: "" });
          }
          _this7.showAddAnchangs = true;
        } else {
          _this7.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
        }
      }).catch(function (error) {
        console.log("error=", error);
        _this7.$message({
          type: "error",
          message: "请求超时，请稍后重试！",
          duration: 1000
        });
      });
    }
  },
  mounted: function mounted() {
    var _this8 = this;

    var rootAdminInfo = JSON.parse(Object(utils["a" /* Decrypt */])(window.sessionStorage.getItem("rootAdminInfo")));
    this.role = rootAdminInfo.role;
    this.level = rootAdminInfo.level;
    this.corId = this.$route.params.corId;;
    this.rootAdminInfo = rootAdminInfo;

    switch (this.level) {
      case "-1":
        this.levelName = "内部集团";
        break;
      case "1":
        this.levelName = "集团";
        break;
      case "4":
        this.levelName = "大区";
        break;
      case "2":
        this.levelName = "城市";
        break;
    }
    //！！！！！！！！！！！！！！！！！！！！！！！！取现有的所有大区
    var data = {
      admin: this.rootAdminInfo,
      corpId: this.corId
    };
    this.$request.getArea(data).then(function (res) {
      if (res.status == 200 && res.data.code == 1000) {
        console.log(res.data.data);
        for (var i = 0; i < res.data.data.length; i++) {
          var obj = {};
          obj.id = res.data.data[i].id;
          obj.areaName = res.data.data[i].name;
          // this.formData.areaNodes.pop();
          _this8.formData.areaNodes.push(obj);
          // this.formData.areaNodes.push({ id: "", areaName: "" });
          var option = {};
          option.value = res.data.data[i].id;
          option.label = res.data.data[i].name;
          _this8.areaOptions.push(option);
        }
      } else {
        _this8.$message({
          type: "error",
          message: res.data.msg,
          duration: 1000
        });
      }
    }).catch(function (error) {
      console.log("error=", error);
      _this8.$message({
        type: "error",
        message: "请求超时，请稍后重试！",
        duration: 1000
      });
    });
  }
});
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-1eddace4","hasScoped":true,"transformToRequire":{"video":["src","poster"],"source":"src","img":"src","image":"xlink:href"},"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/projectManagement/configAnchangs.vue
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"dataDictionary"},[_c('div',{staticClass:"dataDictionary-title el-row"},[_c('span',{staticClass:"dataDictionary-title_liner"}),_vm._v(" "),_c('span',{staticClass:"dataDictionary-title_text"},[_vm._v(_vm._s(_vm.levelName)+"管理")]),_vm._v(" "),_c('span',{staticClass:"dataDictionary-direction"},[_vm._v(">")]),_vm._v(" "),_c('span',{staticClass:"dataDictionary-title_text"},[_vm._v("平台管理")]),_vm._v(" "),_c('span',{staticClass:"dataDictionary-direction"},[_vm._v(">")]),_vm._v(" "),_c('span',{staticClass:"dataDictionary-title_text"},[_vm._v("新增")])]),_vm._v(" "),_c('div',{staticClass:"add"},[_c('el-button',{attrs:{"type":"success","size":"small","icon":"el-icon-back"},on:{"click":_vm.goback}},[_vm._v("返回")])],1),_vm._v(" "),_c('el-form',{attrs:{"label-position":_vm.left,"label-width":"80px","model":_vm.formData}},[(_vm.level == 1||_vm.level == -1)?_c('el-form-item',{attrs:{"label":"新增大区"}},[_c('div',{staticClass:"nodes"},_vm._l((_vm.formData.areaNodes),function(node,i){return _c('div',{key:i,staticClass:"node"},[_c('el-input',{staticClass:"ipinput",attrs:{"size":"mini","disabled":true},model:{value:(node.areaName),callback:function ($$v) {_vm.$set(node, "areaName", $$v)},expression:"node.areaName"}}),_vm._v(" "),_c('i',{staticClass:"el-icon-circle-close",on:{"click":function($event){return _vm.delNode(0,node,i)}}}),_vm._v("\n             \n        ")],1)}),0),_vm._v(" "),_c('div',{staticStyle:{"padding-top":"8px"}},[_c('el-input',{staticClass:"ipinput",model:{value:(_vm.newarea),callback:function ($$v) {_vm.newarea=$$v},expression:"newarea"}}),_vm._v(" "),_c('i',{staticClass:"el-icon-circle-plus-outline",staticStyle:{"color":"#000"},on:{"click":function($event){return _vm.addAreanode()}}})],1)]):_vm._e(),_vm._v(" "),(_vm.level == 1||_vm.level==4||_vm.level == -1)?_c('el-form-item',{attrs:{"label":"新增城市"}},[_c('el-select',{attrs:{"placeholder":"请选择大区"},on:{"change":_vm.changeArea},model:{value:(_vm.chooseArea),callback:function ($$v) {_vm.chooseArea=$$v},expression:"chooseArea"}},_vm._l((_vm.areaOptions),function(item){return _c('el-option',{key:item.value,attrs:{"label":item.label,"value":item.value}})}),1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showAddCitys),expression:"showAddCitys"}],staticClass:"nodes"},_vm._l((_vm.formData.cityNodes),function(node,i){return _c('div',{key:i,staticClass:"node"},[_c('el-input',{staticClass:"ipinput",attrs:{"size":"mini","disabled":true},model:{value:(node.cityName),callback:function ($$v) {_vm.$set(node, "cityName", $$v)},expression:"node.cityName"}}),_vm._v(" "),_c('i',{staticClass:"el-icon-circle-close",on:{"click":function($event){return _vm.delNode(1,node, i)}}}),_vm._v("\n             \n        ")],1)}),0),_vm._v(" "),_c('div',{staticStyle:{"padding-top":"8px"}},[_c('el-input',{staticClass:"ipinput",model:{value:(_vm.newcity),callback:function ($$v) {_vm.newcity=$$v},expression:"newcity"}}),_vm._v(" "),_c('i',{staticClass:"el-icon-circle-plus-outline",staticStyle:{"color":"#000"},on:{"click":function($event){return _vm.addCitynode()}}})],1)],1):_vm._e(),_vm._v(" "),(_vm.level == 1||_vm.level==4 || _vm.level==2||_vm.level == -1)?_c('el-form-item',{attrs:{"label":"新增案场"}},[_c('el-select',{attrs:{"placeholder":"请选择城市"},on:{"change":_vm.changeCity},model:{value:(_vm.chooseCity),callback:function ($$v) {_vm.chooseCity=$$v},expression:"chooseCity"}},_vm._l((_vm.cityOptions),function(item){return _c('el-option',{key:item.value,attrs:{"label":item.label,"value":item.value}})}),1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showAddAnchangs),expression:"showAddAnchangs"}],staticClass:"nodes"},_vm._l((_vm.formData.anchangNodes),function(node,i){return _c('div',{key:i,staticClass:"node"},[_c('el-input',{staticClass:"ipinput",attrs:{"size":"mini","disabled":true},model:{value:(node.anchangName),callback:function ($$v) {_vm.$set(node, "anchangName", $$v)},expression:"node.anchangName"}}),_vm._v(" "),_c('i',{staticClass:"el-icon-circle-close",on:{"click":function($event){return _vm.delNode(2,node,i)}}}),_vm._v("\n             \n        ")],1)}),0),_vm._v(" "),_c('div',{staticStyle:{"padding-top":"8px"}},[_c('el-input',{staticClass:"ipinput",model:{value:(_vm.newanchang),callback:function ($$v) {_vm.newanchang=$$v},expression:"newanchang"}}),_vm._v(" "),_c('i',{staticClass:"el-icon-circle-plus-outline",staticStyle:{"color":"#000"},on:{"click":function($event){return _vm.addAnchangnode()}}})],1)],1):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"提示","visible":_vm.deleteDialogVisible,"width":"30%","center":""},on:{"update:visible":function($event){_vm.deleteDialogVisible=$event}}},[_c('span',[_vm._v(_vm._s(_vm.msg))]),_vm._v(" "),_c('span',{staticClass:"dialog-footer",attrs:{"slot":"footer"},slot:"footer"},[_c('el-button',{on:{"click":function($event){_vm.deleteDialogVisible = false}}},[_vm._v("取 消")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":_vm.del}},[_vm._v("确 定")])],1)])],1)}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ var projectManagement_configAnchangs = (esExports);
// CONCATENATED MODULE: ./src/components/projectManagement/configAnchangs.vue
function injectStyle (ssrContext) {
  __webpack_require__("i96K")
}
var normalizeComponent = __webpack_require__("VU/8")
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-1eddace4"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  configAnchangs,
  projectManagement_configAnchangs,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ var components_projectManagement_configAnchangs = __webpack_exports__["default"] = (Component.exports);


/***/ })

});