webpackJsonp([22],{

/***/ "/dhV":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ./src/lib/utils.js
var utils = __webpack_require__("n95b");

// EXTERNAL MODULE: ./node_modules/flv.js/src/flv.js + 38 modules
var flv = __webpack_require__("9vWd");

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/fieldCheck.vue
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var fieldCheck = ({
  name: "fieldCheck",
  data: function data() {
    return {
      level: "", //权限管理
      role: "", //角色管理
      anchangIds: "", //当前用户的anchangId
      loading: true, //表格加载动画
      loadingEq: false, //树形加载动画
      anchangList: [],
      defaultProps: {
        label: "name"
      },
      activeId: "", //选中的城市
      activeCor: "", //选中的集团
      data2: [],
      currentPage: 1, //分页组件
      pageTotal: 5, //每页几条
      total: 0, //总条数
      equiplists: [], //该案场所有摄像头名字
      anchangId: "", //选择的案场id
      flvPlayer: null,
      httpurl: "",
      liveId: "",
      liveCmdId: "",
      cityAnchang: {}, //保存城市和案场的映射
      liveLoading: false,
      interval: "",
      countSend: 0 //控制每个案场只发送一次网络状态
    };
  },
  created: function created() {
    var _this2 = this;

    var rootAdminInfo = JSON.parse(Object(utils["a" /* Decrypt */])(window.sessionStorage.getItem("rootAdminInfo")));

    //请求集团的数据
    this.level = rootAdminInfo.level;
    this.role = rootAdminInfo.role;
    var corId = rootAdminInfo.corId;
    var anchangIds = rootAdminInfo.anchangId;
    this.anchangIds = anchangIds;
    var cityName = rootAdminInfo.cityName;

    this.$request.searchAnchang({ admin: rootAdminInfo, allowEmptyChild: false }).then(function (res) {
      console.log(res);
      if (res.status == 200 && res.data.code == 1000) {
        //给每条数据添加value属性
        var _val = function _val(arr) {
          arr.forEach(function (item, index) {
            item.value = item.id;
            if (item.children) {
              if (item.children.length != 0) {
                _val(item.children);
              } else {
                delete item.children;
              }
            }
          });
        };

        _this2.loadingEq = false;

        var data = res.data.data.treeNodes;
        if (data.length == 0) {
          _this2.$message({
            type: "warning",
            message: "当前账号没有可管理案场！",
            duration: 1000
          });
          return;
        }
        //默认选第一个城市
        _this2.anchangList = data[0].children[0].children[0].children;
        _this2.anchangId = _this2.anchangList[0].id;
        _this2.chooseAnchang();
        //删除最后一级 案场
        data.forEach(function (cor) {
          cor.fid = "a" + cor.id;
          if (cor.children) {
            cor.children.forEach(function (area) {
              area.fid = "b" + area.id;
              if (area.children) {
                area.children.forEach(function (city) {
                  city.fid = "c" + city.id;
                  if (city.children) {
                    _this2.cityAnchang[city.id] = city.children;
                    city.children = null;
                  }
                });
              }
            });
          }
        });
        _val(data);
        _this2.data2 = data;
        console.log(data);

        var activeId3 = data[0].children[0].children[0].fid; //城市
        _this2.activeCor = data[0].id; //集团id
        _this2.activeId = data[0].children[0].children[0].name; //城市

        var _this = _this2;
        _this.$nextTick(function () {
          _this.$refs.tree2.setCurrentKey(activeId3);
        });
      } else {
        _this2.$message({
          type: "error",
          message: "加载失败，请稍后再试",
          duration: 1000
        });
      }
    }).catch(function (err) {
      console.log(err);
      _this2.$message({
        type: "error",
        message: "请求超时，请稍后重试!",
        duration: 1000
      });
    });
  },

  methods: {
    //点击树节点
    clickNode: function clickNode(a, b, c) {
      this.stopLive();
      this.anchangId = "";
      this.equiplists = [];
      this.currentPage = 1;
      if (!a.children && a.fid.indexOf("c") >= 0) {
        this.activeId = a.name; //城市
        this.activeCor = b.parent.parent.data.id;
        this.anchangList = this.cityAnchang[a.id];
        this.anchangId = this.anchangList[0].id;
        this.chooseAnchang();
        console.log(a.id);
        // this.getEquipmentList();
      } else {
        this.anchangList = [];
      }
    },

    /*************  请求设备列表   ******************/
    getEquipmentList: function getEquipmentList(value) {
      var _this3 = this;

      var name = "";
      this.loading = true;
      //后台请求列表接口

      getName(this.data2, this.activeId);
      function getName(arr, id) {
        arr.forEach(function (item, index) {
          if (item.id == id) {
            name = item.name;
          }
        });
      }
      if (value) {
        name = value;
      } else {
        getName(this.data2, this.activeId);
      }
      this.$request.getAnchangImg({
        cityName: this.activeId,
        corId: this.activeCor,
        anchangIds: this.anchangIds
      }).then(function (res) {
        if (res.status == 200 && res.data.code == 1000) {
          var list = res.data.data;
          _this3.anchangList = list;
          if (_this3.anchangList.length > 0) {
            _this3.anchangId = _this3.anchangList[0].id;
            _this3.chooseAnchang();
          }
          _this3.loading = false;
          console.log(_this3.anchangList);
        } else {
          _this3.anchangList = [];
          _this3.total = 0;
          _this3.loading = false;
        }
      }).catch(function (error) {
        _this3.$message({
          type: "error",
          message: "请求超时，请稍后重试",
          duration: 1000
        });
      });
    },


    //向后台发送网络状态
    sendServer: function sendServer(net) {
      this.countSend++;
      if (this.countSend == 1) {
        this.$request.setNetworkEnv({
          anchangId: this.anchangId,
          intranet: net
        }).then(function (response) {
          console.log(response);
        });
      }
    },


    //选择案场
    chooseAnchang: function chooseAnchang() {
      var _this4 = this;

      console.log(this.anchangId);
      //判断内外网
      this.countSend = 0;
      var flag = "";
      this.$request.getServiceConfigs({
        anchangId: this.anchangId
      }).then(function (response) {
        var res = response.data;
        console.log(res);
        if (res.code == "1000") {
          var that = _this4;
          if (res.data.marginIp) {
            var ip = res.data.marginIp.split("//")[1].split(":")[0];
            axios.get("https://" + ip + "/ping").then(function (response) {
              if (response.status == "200") {
                flag = 1; //局域网内
                that.sendServer("true");
              } else {
                that.sendServer("false");
              }
            }).catch(function (error) {
              that.sendServer("false");
            });
            //5秒未应答认为是外网
            setTimeout(function () {
              if (flag == "") {
                that.sendServer("false");
              }
            }, 5000);
          } else {
            that.sendServer("false");
          }
        }
      });
      this.$request.getCameraByAnchang({
        anchangId: this.anchangId,
        currentPage: 1,
        pageSize: 20
      }).then(function (res) {
        console.log(res);
        if (res.data.code == 1000) {
          var list = res.data.data.list;
          for (var i = 0; i < list.length; i++) {
            list[i].shadow = "hover";
          }
          _this4.equiplists = list;
          console.log(_this4.equiplists);
        } else {
          _this4.$message({
            type: "error",
            message: res.data.msg,
            duration: 1000
          });
        }
      });
    },

    //选择区域
    chooseEquip: function chooseEquip(info, index) {
      var _this5 = this;

      this.stopLive();
      var that = this;
      console.log("设备id=", info.id);
      this.liveId = info.id;
      for (var i = 0; i < this.equiplists.length; i++) {
        if (i == index) {
          that.equiplists[i].shadow = "always";
        } else {
          that.equiplists[i].shadow = "hover";
        }
      }
      if (info.open !== 1) {
        this.$message({
          type: "warning",
          message: "该区域摄像头未被启用！",
          duration: 1000
        });
        return;
      }
      this.httpurl = info.pushUrl;
      this.liveLoading = true;
      this.$request.doLive({
        anchangId: this.anchangId,
        id: info.id
      }).then(function (res) {
        if (res.data.code == 1000) {
          _this5.liveCmdId = res.data.data.cmdId;
          var count = 0;
          var flag = 0;
          var cmdId = res.data.data.cmdId;
          var playUrl = res.data.data.playUrl;

          var _this = _this5;
          if (cmdId == -1) {
            //旧版走旧逻辑
            _this.$nextTick(function () {
              var videoElement = document.getElementById("my-video");
              _this.flvPlayer = flv["a" /* default */].createPlayer({
                type: "flv",
                url: playUrl,
                hasAudio: false,
                config: {
                  enableWorker: true,
                  enableStashBuffer: false,
                  stashInitialSize: 128
                }
              });
              _this.flvPlayer.attachMediaElement(videoElement);
              _this.flvPlayer.load();
              _this.flvPlayer.play();
              _this.liveLoading = false;
            });
          } else {
            var func = function func() {
              //定时任务
              count++;
              console.log(count);
              _this.$request.checkLive({
                cmdId: cmdId
              }).then(function (response) {
                console.log(response);
                if (response.data.data.code == "3") {
                  _this.$nextTick(function () {
                    var videoElement = document.getElementById("my-video");
                    _this.flvPlayer = flv["a" /* default */].createPlayer({
                      type: "flv",
                      url: playUrl,
                      hasAudio: false,
                      config: {
                        enableWorker: true,
                        enableStashBuffer: false,
                        stashInitialSize: 128
                      }
                    });
                    _this.flvPlayer.attachMediaElement(videoElement);
                    _this.flvPlayer.load();
                    _this.flvPlayer.play();
                    flag = 1;
                    _this.liveLoading = false;
                  });
                  clearInterval(_this.interval); //停止
                }
                if (count == 20 && flag == 0) {
                  _this.$message({
                    type: "error",
                    message: "获取视频失败",
                    duration: 1000
                  });
                  _this.liveLoading = false;
                  clearInterval(_this.interval); //停止
                }
              }).catch(function (error) {
                _this.$message({
                  type: "error",
                  message: "获取视频失败",
                  duration: 1000
                });
                _this.liveLoading = false;
                console.log("error=", error);
                clearInterval(_this.interval); //停止
              });
            };

            _this.interval = setInterval(func, 6000); //轮询
          }
        }
      });
    },
    stopLive: function stopLive() {
      clearInterval(this.interval); //停止
      if (this.liveId) {
        var param = void 0;
        if (this.liveCmdId == -1) {
          param = {
            anchangId: this.anchangId,
            id: this.liveId
          };
        } else {
          param = {
            anchangId: this.anchangId,
            id: this.liveId,
            cmdId: this.liveCmdId
          };
        }
        this.httpurl = "";
        this.$request.endLive(param).then(function (res) {
          console.log(res);
        });
      }
    }
  },
  destroyed: function destroyed() {
    this.stopLive();
  }
});
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-7dac94c6","hasScoped":true,"transformToRequire":{"video":["src","poster"],"source":"src","img":"src","image":"xlink:href"},"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/fieldCheck.vue
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"equipment"},[_c('div',{staticClass:"tree-list"},[_c('p',[_vm._v("城市列表：")]),_vm._v(" "),_c('el-tree',{directives:[{name:"loading",rawName:"v-loading",value:(_vm.loadingEq),expression:"loadingEq"}],ref:"tree2",attrs:{"data":_vm.data2,"props":_vm.defaultProps,"expand-on-click-node":false,"default-expand-all":"","highlight-current":"","node-key":"fid"},on:{"node-click":_vm.clickNode}})],1),_vm._v(" "),_c('div',{staticClass:"equipmentFrom"},[_vm._m(0),_vm._v(" "),_c('div',[_c('el-select',{staticClass:"selectCss",attrs:{"placeholder":"请选择案场"},on:{"change":_vm.chooseAnchang},model:{value:(_vm.anchangId),callback:function ($$v) {_vm.anchangId=$$v},expression:"anchangId"}},_vm._l((_vm.anchangList),function(item){return _c('el-option',{key:item.id,attrs:{"label":item.name,"value":item.id}})}),1),_vm._v(" "),_c('el-row',{staticClass:"equipList"},[_c('el-col',{attrs:{"span":4}},[_c('p',[_vm._v("请选择巡检区域：")]),_vm._v(" "),(_vm.equiplists.length!==0)?_c('div',{attrs:{"id":"equipList"}},_vm._l((_vm.equiplists),function(item,index){return _c('el-card',{key:item.areaId,staticClass:"card",attrs:{"shadow":item.shadow},nativeOn:{"click":function($event){return _vm.chooseEquip(item, index)}}},[_vm._v("\n              "+_vm._s(item.name)+"\n            ")])}),1):_c('p',[_vm._v("暂无区域！")])]),_vm._v(" "),_c('el-col',{attrs:{"span":20}},[_c('div',{staticClass:"videoBox"},[_c('p',{directives:[{name:"show",rawName:"v-show",value:(_vm.liveLoading),expression:"liveLoading"}]},[_vm._v("推流加载中...\n              "),_c('i',{staticClass:"el-icon-loading"})]),_vm._v(" "),_c('video',{attrs:{"src":"","id":"my-video","name":"videoElement","controls":"","muted":"","autoplay":"","width":"100%"},domProps:{"muted":true}},[_vm._v("\n              Your browser is too old which doesn't support HTML5 video.\n            ")])])])],1)],1)])])}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"equipment-title el-row"},[_c('span',{staticClass:"equipment-title_liner"}),_vm._v(" "),_c('span',{staticClass:"equipment-title_text"},[_vm._v("案场巡检")])])}]
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ var components_fieldCheck = (esExports);
// CONCATENATED MODULE: ./src/components/fieldCheck.vue
function injectStyle (ssrContext) {
  __webpack_require__("Dhf/")
}
var normalizeComponent = __webpack_require__("VU/8")
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-7dac94c6"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  fieldCheck,
  components_fieldCheck,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ var src_components_fieldCheck = __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ "Dhf/":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })

});